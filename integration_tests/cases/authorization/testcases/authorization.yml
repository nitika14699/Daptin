---
- config:
    - testset: "Quickstart user tests"
    - variable_binds: {goodName: 'Parth',
                        badName: 'Badnaam',
                        goodEmail: 'artpar@gmail.com',
                        badEmail: 'non@existent.com',
                        goodPassword: 'parth123',
                        badPassword: 'helloWorld',
                        goodConfirm: 'parth123',
                        badConfirm: 'helloWorld',
                        user1Name: 'User1',
                        user2Name: 'User2',
                        user3Name: 'User3',
                        user1Email: 'user1@gmail.com',
                        user2Email: 'user2@gmail.com',
                        user3Email: 'user3@gmail.com',
                        user1Password: 'user1Password',
                        user2Password: 'user2Password',
                        user3Password: 'user3Password',
                        }

- test:
    - group: "Users action positive"
    - name: "Basic user list"
    - url: "/api/user_account"
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [200]
    - validators:
      - compare: {jsonpath_mini: 'links.per_page', comparator: 'eq', expected: 10}

- test:
    - group: "Users action positive"
    - name: "Sign in bad"
    - url: "/action/user_account/signin"
    - method: "POST"
    - headers: {'Content-Type': 'application/json'}
    - body: {template: '{"attributes":{"password":"badPassword","email":"$goodEmail"}}'}
    - expected_status: [200]
    - validators:
      - compare: {jsonpath_mini: '.0.ResponseType', comparator: 'eq', expected: 'client.notify'}

- test:
    - group: "Users action positive"
    - name: "Sign up"
    - url: "/action/user_account/signup"
    - method: "POST"
    - headers: {'Content-Type': 'application/json'}
    - body: {template: '{"attributes":{"name":"$user1Name","password":"$user1Password","passwordConfirm":"$user1Password","email":"$user1Email"}}'}
    - expected_status: [200]
    - validators:
      - compare: {jsonpath_mini: '.0.ResponseType', comparator: 'eq', expected: 'client.notify'}
      - compare: {jsonpath_mini: '.0.Attributes.type', comparator: 'eq', expected: 'success'}

- test:
    - group: "Users action positive"
    - name: "Sign up"
    - url: "/action/user_account/signup"
    - method: "POST"
    - headers: {'Content-Type': 'application/json'}
    - body: {template: '{"attributes":{"name":"$user2Name","password":"$user2Password","passwordConfirm":"$user2Password","email":"$user2Email"}}'}
    - expected_status: [200]
    - validators:
      - compare: {jsonpath_mini: '.0.ResponseType', comparator: 'eq', expected: 'client.notify'}
      - compare: {jsonpath_mini: '.0.Attributes.type', comparator: 'eq', expected: 'success'}

- test:
    - group: "Users action positive"
    - name: "Sign up"
    - url: "/action/user_account/signup"
    - method: "POST"
    - headers: {'Content-Type': 'application/json'}
    - body: {template: '{"attributes":{"name":"$user3Name","password":"$user3Password","passwordConfirm":"$user3Password","email":"$user3Email"}}'}
    - expected_status: [200]
    - validators:
      - compare: {jsonpath_mini: '.0.ResponseType', comparator: 'eq', expected: 'client.notify'}
      - compare: {jsonpath_mini: '.0.Attributes.type', comparator: 'eq', expected: 'success'}

- test:
    - group: "Users action negative"
    - name: "Sign in user 1 should fail"
    - url: "/action/user_account/signin"
    - method: "POST"
    - headers: {'Content-Type': 'application/json'}
    - body: {template: '{"attributes":{"password":"bassowordkah","email":"$user1Email"}}'}
    - expected_status: [200]
    - validators:
      - compare: {raw_body: '', comparator: 'contains', expected: 'Invalid username'}


- test:
    - group: "Users action positive"
    - name: "Sign in user 1 should pass"
    - url: "/action/user_account/signin"
    - method: "POST"
    - headers: {'Content-Type': 'application/json'}
    - body: {template: '{"attributes":{"password":"$user1Password","email":"$user1Email"}}'}
    - expected_status: [200]
    - validators:
      - compare: {jsonpath_mini: '.0.ResponseType', comparator: 'eq', expected: 'client.store.set'}
    - extract_binds:
      - 'user1Token': {'jsonpath_mini': '.0.Attributes.value'}


- test:
    - group: "Users action positive"
    - name: "Sign in admin user"
    - url: "/action/user_account/signin"
    - method: "POST"
    - headers: {'Content-Type': 'application/json'}
    - body: {template: '{"attributes":{"password":"$goodPassword","email":"$goodEmail"}}'}
    - expected_status: [200]
    - validators:
      - compare: {jsonpath_mini: '.0.ResponseType', comparator: 'eq', expected: 'client.store.set'}
    - extract_binds:
      - 'adminToken': {'jsonpath_mini': '.0.Attributes.value'}

- test:
    - group: "User read positive"
    - name: "List users by admin"
    - url: "/api/user_account"
    - method: "GET"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $adminToken'}}
    - expected_status: [200]
    - validators:
      - compare: {jmespath: 'length(data)', comparator: 'eq', expected: 5}
    - extract_binds:
      - adminUserId: {jsonpath_mini: 'data.1.id'}
      - user1Id: {jsonpath_mini: 'data.2.id'}
      - user2Id: {jsonpath_mini: 'data.3.id'}
      - user3Id: {jsonpath_mini: 'data.4.id'}


- test:
    - group: "Users action positive"
    - name: "Sign in user 2"
    - url: "/action/user_account/signin"
    - method: "POST"
    - headers: {'Content-Type': 'application/json'}
    - body: {template: '{"attributes":{"password":"$user2Password","email":"$user2Email"}}'}
    - expected_status: [200]
    - validators:
      - compare: {jsonpath_mini: '.0.ResponseType', comparator: 'eq', expected: 'client.store.set'}
    - extract_binds:
      - 'user2Token': {'jsonpath_mini': '.0.Attributes.value'}


- test:
    - group: "Users action positive"
    - name: "Sign in user 3"
    - url: "/action/user_account/signin"
    - method: "POST"
    - headers: {'Content-Type': 'application/json'}
    - body: {template: '{"attributes":{"password":"$user3Password","email":"$user3Email"}}'}
    - expected_status: [200]
    - validators:
      - compare: {jsonpath_mini: '.0.ResponseType', comparator: 'eq', expected: 'client.store.set'}
    - extract_binds:
      - 'user3Token': {'jsonpath_mini': '.0.Attributes.value'}

- test:
    - group: "World read positive"
    - name: "List of all the worlds by guest account"
    - url: "/api/world?page[size]=100&page[number]=1"
    - method: "GET"
    - expected_status: [200]


- test:
    - group: "Blog write negative"
    - name: 'User 1 cannot create post because the world doesnt allow'
    - url: "/api/blog"
    - method: "POST"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $user1Token'}}
    - body: {template: '{"data":{"type":"blog","attributes":{"title":"User 1 blog","view_count":0}}}'}
    - expected_status: [500]

- test:
    - group: "Blog write positive"
    - name: 'Admin can create post because the world allows it'
    - url: "/api/blog"
    - method: "POST"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $adminToken'}}
    - body: {template: '{"data":{"type":"blog","attributes":{"title":"Admin blog","view_count":0}}}'}
    - expected_status: [201]
    - validators:
      - compare: {jsonpath_mini: 'data.type', comparator: 'eq', expected: 'blog'}
    - extract_binds:
      - 'adminBlog1': {'jsonpath_mini': 'data.id'}

- test:
    - group: "Blog read negative"
    - name: 'User 1 cannot see the blog created by admin yet'
    - url: {template: /api/blog/$adminBlog1}
    - method: "GET"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $user1Token'}}
    - expected_status: [500]
    - validators:
      - compare: {raw_body: '', comparator: 'contains', expected: 'Unauthorized'}


- test:
    - group: "Blog write positive"
    - name: 'Admin can also update post - update permission and title'
    - url: {template: /api/blog/$adminBlog1}
    - method: "PATCH"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $adminToken'}}
    - body: {template: '{"data":{"type":"blog","attributes":{"title":"Admin blog new title","view_count":100,"permission":755}}}'}
    - expected_status: [200]
    - validators:
      - compare: {jsonpath_mini: 'data.type', comparator: 'eq', expected: 'blog'}
      - compare: {jsonpath_mini: 'data.attributes.title', comparator: 'eq', expected: 'Admin blog new title'}
    - extract_binds:
      - 'adminBlog1': {'jsonpath_mini': 'data.id'}

- test:
    - group: "Blog read negative"
    - name: 'User 1 can not still see the blog created by admin after permission'
    - url: {template: /api/blog/$adminBlog1}
    - method: "GET"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $user1Token'}}
    - expected_status: [500]

- test:
    - group: "Blog write negative"
    - name: 'User 1 cannot edit the blog owned by admin under permission 755'
    - url: {template: /api/blog/$adminBlog1}
    - method: "PATCH"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $user1Token'}}
    - body: {template: '{"data":{"type":"blog","attributes":{"title":"Title set by user 1","view_count":100,"permission":755}}}'}
    - expected_status: [500]
    - validators:
      - compare: {raw_body: '', comparator: 'contains', expected: 'Unauthorized'}


- test:
    - group: "Usergroup write positive"
    - name: 'Admin can create usergroup 1 because the world allows it'
    - url: "/api/usergroup"
    - method: "POST"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $adminToken'}}
    - body: {template: '{"data":{"type":"usergroup","attributes":{"name":"User group 1"}}}'}
    - expected_status: [201]
    - validators:
      - compare: {jsonpath_mini: 'data.attributes.name', comparator: 'contains', expected: 'User group 1'}
      - compare: {jsonpath_mini: 'data.type', comparator: 'eq', expected: 'usergroup'}
    - extract_binds:
      - 'usergroup1Id': {'jsonpath_mini': 'data.id'}


- test:
    - group: "Usergroup write positive"
    - name: 'Admin can create usergroup 2 because the world allows it'
    - url: "/api/usergroup"
    - method: "POST"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $adminToken'}}
    - body: {template: '{"data":{"type":"usergroup","attributes":{"name":"User group 2"}}}'}
    - expected_status: [201]
    - validators:
      - compare: {jsonpath_mini: 'data.attributes.name', comparator: 'contains', expected: 'User group 2'}
      - compare: {jsonpath_mini: 'data.type', comparator: 'eq', expected: 'usergroup'}
    - extract_binds:
      - 'usergroup2Id': {'jsonpath_mini': 'data.id'}

- test:
    - group: "Usergroup write positive"
    - name: 'Admin can create usergroup 3 because the world allows it'
    - url: "/api/usergroup"
    - method: "POST"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $adminToken'}}
    - body: {template: '{"data":{"type":"usergroup","attributes":{"name":"User group 3"}}}'}
    - expected_status: [201]
    - validators:
      - compare: {jsonpath_mini: 'data.attributes.name', comparator: 'contains', expected: 'User group 3'}
      - compare: {jsonpath_mini: 'data.type', comparator: 'eq', expected: 'usergroup'}
    - extract_binds:
      - 'usergroup3Id': {'jsonpath_mini': 'data.id'}

- test:
    - group: "Usergroup write negative"
    - name: 'Admin fails to create usergroup because no name given'
    - url: "/api/usergroup"
    - method: "POST"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $adminToken'}}
    - body: {template: '{"data":{"type":"usergroup","attributes":{}}}'}
    - expected_status: [500]

- test:
    - group: "Usergroup write positive"
    - name: 'User 1 can create usergroups because the world allow it'
    - url: "/api/usergroup"
    - method: "POST"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $user1Token'}}
    - body: {template: '{"data":{"type":"usergroup","attributes":{"name":"User group 4 by user 1"}}}'}
    - expected_status: [201]
    - validators:
      - compare: {jsonpath_mini: 'data.attributes.name', comparator: 'contains', expected: 'User group 4 by user 1'}
    - extract_binds:
      - 'usergroup4Id': {'jsonpath_mini': 'data.id'}


- test:
    - group: "Usergroup write negative"
    - name: 'User 1 can not add user 1 to usergroup 1'
    - url: {template: "/api/usergroup/$usergroup1Id"}
    - method: "PATCH"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $user1Token'}}
    - body: {template: '{"data":{"type":"usergroup","attributes":{},"relationships":{"user_id":{"data":[{"id":"$user1Id","type":"user"}]}},"id":"$usergroup1Id"}}'}
    - expected_status: [201]


- test:
    - group: "Usergroup write negative"
    - name: 'User 1 can not add user 1 to usergroup 2'
    - url: {template: "/api/usergroup/$usergroup2Id"}
    - method: "PATCH"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $user1Token'}}
    - body: {template: '{"data":{"type":"usergroup","attributes":{},"relationships":{"user_id":{"data":[{"id":"$user1Id","type":"user"}]}},"id":"$usergroup2Id"}}'}
    - expected_status: [201]


- test:
    - group: "Usergroup write negative"
    - name: 'User 1 can not add user 2 to usergroup 1'
    - url: {template: "/api/usergroup/$usergroup1Id"}
    - method: "PATCH"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $user1Token'}}
    - body: {template: '{"data":{"type":"usergroup","attributes":{},"relationships":{"user_id":{"data":[{"id":"$user2Id","type":"user"}]}},"id":"$usergroup1Id"}}'}
    - expected_status: [201]



- test:
    - group: "Usergroup write positive"
    - name: 'Admin can add user 1 to usergroup 1'
    - url: {template: "/api/usergroup/$usergroup1Id"}
    - method: "PATCH"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $adminToken'}}
    - body: {template: '{"data":{"type":"usergroup","attributes":{},"relationships":{"user_id":{"data":[{"id":"$user1Id","type":"user"}]}},"id":"$usergroup1Id"}}'}
    - expected_status: [200]

#
#- test:
#    - group: "Usergroup write positive"
#    - name: 'Admin can add user 2 to usergroup 2'
#    - url: {template: "/api/usergroup/$usergroup2Id"}
#    - method: "PATCH"
#    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $admintoken'}}
#    - body: {template: {"data":{"type":"usergroup","attributes":{},"relationships":{"user_id":{"data":[{"id":"$user2Id","type":"user"}]}},"id":"$usergroup2Id"}}}
#    - expected_status: [201]
#
#
#- test:
#    - group: "Usergroup write positive"
#    - name: 'Admin can add user 3 to usergroup 3'
#    - url: {template: "/api/usergroup/$usergroup3Id"}
#    - method: "PATCH"
#    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $admintoken'}}
#    - body: {template: {"data":{"type":"usergroup","attributes":{},"relationships":{"user_id":{"data":[{"id":"$user3Id","type":"user"}]}},"id":"$usergroup3Id"}}}
#    - expected_status: [201]


#- test:
#    - group: "Blog read positive"
#    - name: 'User 2 can see the blog created by admin because he is part of group1'
#    - url: {template: /api/blog/$adminBlog1}
#    - method: "GET"
#    - headers: {template: {'Content-Type': 'application/json', 'Authorization': 'Bearer $user1Token'}}
#    - expected_status: [200]
#    - validators:
#      - compare: {jsonpath_mini: 'data.type', comparator: 'eq', expected: 'blog'}
#      - compare: {jsonpath_mini: 'data.attributes.title', comparator: 'eq', expected: 'Admin blog new title'}
#
