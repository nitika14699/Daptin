components:
  schemas:
    Action:
      properties:
        action_name:
          type: string
        action_schema:
          type: string
        created_at:
          type: string
        instance_optional:
          type: boolean
        label:
          type: string
        reference_id:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - action_name
      - label
      - instance_optional
      - action_schema
      type: object
    ActionResponse:
      properties:
        Attributes:
          type: object
        ResponseType:
          type: string
      type: object
    AddExchangeOnWorldRequestObject:
      description: Add new data exchange
      properties:
        app_key:
          type: string
        name:
          type: string
        sheet_id:
          type: string
        world_id:
          description: reference id of a world
          type: string
      type: object
    BecomeAnAdministratorOnWorldRequestObject:
      description: Become Daptin Administrator
      properties: {}
      type: object
    Certificate:
      properties:
        certificate_pem:
          type: string
        created_at:
          type: string
        generated_at:
          type: string
        hostname:
          type: string
        issuer:
          type: string
        private_key_pem:
          type: string
        public_key_pem:
          type: string
        reference_id:
          type: string
        root_certificate:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - hostname
      - issuer
      type: object
    CloudStore:
      properties:
        created_at:
          type: string
        name:
          type: string
        reference_id:
          type: string
        root_path:
          type: string
        store_parameters:
          type: string
        store_provider:
          type: string
        store_type:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - name
      - store_type
      - store_provider
      - root_path
      - store_parameters
      type: object
    CreateFolderOnCloudStoreRequestObject:
      description: Create folder on a cloud store
      properties:
        cloud_store_id:
          description: reference id of a cloud_store
          type: string
        name:
          type: string
        path:
          type: string
      type: object
    CreateSiteOnCloudStoreRequestObject:
      description: Create new site on this store
      properties:
        cloud_store_id:
          description: reference id of a cloud_store
          type: string
        hostname:
          type: string
        path:
          type: string
        site_type:
          type: string
      type: object
    DataExchange:
      properties:
        attributes:
          type: string
        created_at:
          type: string
        name:
          type: string
        options:
          type: string
        reference_id:
          type: string
        source_attributes:
          type: string
        source_type:
          type: string
        target_attributes:
          type: string
        target_type:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - name
      - source_attributes
      - source_type
      - target_attributes
      - target_type
      - attributes
      - options
      type: object
    DeleteFileOnSiteRequestObject:
      description: Delete file in the site
      properties:
        path:
          type: string
        site_id:
          description: reference id of a site
          type: string
      type: object
    DeletePathOnCloudStoreRequestObject:
      description: Delete path on a cloud store
      properties:
        cloud_store_id:
          description: reference id of a cloud_store
          type: string
        path:
          type: string
      type: object
    DownloadCertificateOnCertificateRequestObject:
      description: Download certificate
      properties:
        certificate_id:
          description: reference id of a certificate
          type: string
      type: object
    DownloadPublicKeyOnCertificateRequestObject:
      description: Download public key
      properties:
        certificate_id:
          description: reference id of a certificate
          type: string
      type: object
    DownloadSystemSchemaOnWorldRequestObject:
      description: Download system schema
      properties: {}
      type: object
    ExportCsvDataOnWorldRequestObject:
      description: Export CSV data
      properties: {}
      type: object
    ExportDataOnWorldRequestObject:
      description: Export data for backup
      properties: {}
      type: object
    Feed:
      properties:
        author_email:
          type: string
        author_name:
          type: string
        created_at:
          type: string
        description:
          type: string
        enable:
          type: boolean
        enable_atom:
          type: boolean
        enable_json:
          type: boolean
        enable_rss:
          type: boolean
        feed_name:
          type: string
        link:
          type: string
        page_size:
          type: number
        reference_id:
          type: string
        title:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - feed_name
      - title
      - description
      - link
      - author_name
      - author_email
      - enable
      - enable_atom
      - enable_json
      - enable_rss
      - page_size
      type: object
    GenerateAcmeCertificateOnCertificateRequestObject:
      description: Generate ACME certificate
      properties:
        certificate_id:
          description: reference id of a certificate
          type: string
        email:
          type: string
      type: object
    GenerateRandomDataOnWorldRequestObject:
      description: Generate random data
      properties:
        count:
          type: number
        world_id:
          description: reference id of a world
          type: string
      type: object
    GenerateSelfCertificateOnCertificateRequestObject:
      description: Generate Self certificate
      properties:
        certificate_id:
          description: reference id of a certificate
          type: string
      type: object
    GetFileOnSiteRequestObject:
      description: Get file at the path in site
      properties:
        path:
          type: string
        site_id:
          description: reference id of a site
          type: string
      type: object
    ImportDataOnWorldRequestObject:
      description: Import data from dump
      properties:
        dump_file:
          type: string
        truncate_before_insert:
          type: boolean
        world_id:
          description: reference id of a world
          type: string
      type: object
    ImportFilesFromStoreOnWorldRequestObject:
      description: Import files data to a table
      properties:
        table_name:
          type: string
        world_id:
          description: reference id of a world
          type: string
      type: object
    IncludedRelationship:
      properties:
        data:
          $ref: '#/components/schemas/RelatedStructure'
        links:
          description: From page
          properties:
            related:
              description: link to related objects
              type: string
            self:
              description: link to self
              type: string
          type: object
      type: object
    InstallIntegrationOnIntegrationRequestObject:
      description: Install integration
      properties:
        integration_id:
          description: reference id of a integration
          type: string
      type: object
    Integration:
      properties:
        authentication_specification:
          type: string
        authentication_type:
          type: string
        created_at:
          type: string
        enable:
          type: boolean
        name:
          type: string
        reference_id:
          type: string
        specification:
          type: string
        specification_format:
          type: string
        specification_language:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - name
      - specification_language
      - specification_format
      - specification
      - authentication_type
      - authentication_specification
      - enable
      type: object
    JsonSchema:
      properties:
        created_at:
          type: string
        json_schema:
          type: string
        reference_id:
          type: string
        schema_name:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - schema_name
      - json_schema
      type: object
    ListFilesOnSiteRequestObject:
      description: List files in the site path
      properties:
        path:
          type: string
        site_id:
          description: reference id of a site
          type: string
      type: object
    Mail:
      properties:
        body:
          type: string
        content_type:
          type: string
        created_at:
          type: string
        deleted:
          type: boolean
        flags:
          type: string
        from_address:
          type: string
        has_attachment:
          type: boolean
        hash:
          type: string
        internal_date:
          type: string
        ip_addr:
          type: string
        is_tls:
          type: boolean
        mail:
          type: string
        mail_id:
          type: string
        message_id:
          type: string
        recent:
          type: boolean
        recipient:
          type: string
        reference_id:
          type: string
        reply_to_address:
          type: string
        return_path:
          type: string
        seen:
          type: boolean
        sender_address:
          type: string
        size:
          type: string
        spam:
          type: boolean
        spam_score:
          type: number
        subject:
          type: string
        to_address:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - message_id
      - mail_id
      - from_address
      - internal_date
      - to_address
      - reply_to_address
      - sender_address
      - subject
      - body
      - mail
      - spam_score
      - hash
      - content_type
      - recipient
      - has_attachment
      - ip_addr
      - return_path
      - is_tls
      - seen
      - recent
      - deleted
      - spam
      - size
      - flags
      type: object
    MailAccount:
      properties:
        created_at:
          type: string
        password:
          type: string
        password_md5:
          type: string
        reference_id:
          type: string
        updated_at:
          type: string
        username:
          type: string
        version:
          type: number
      required:
      - username
      - password
      - password_md5
      type: object
    MailBox:
      properties:
        attributes:
          type: string
        created_at:
          type: string
        flags:
          type: string
        name:
          type: string
        nextuid:
          type: string
        permanent_flags:
          type: string
        reference_id:
          type: string
        subscribed:
          type: boolean
        uidvalidity:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - name
      - subscribed
      - uidvalidity
      - nextuid
      - attributes
      - flags
      - permanent_flags
      type: object
    MailServer:
      properties:
        always_on_tls:
          type: boolean
        authentication_required:
          type: boolean
        created_at:
          type: string
        hostname:
          type: string
        is_enabled:
          type: boolean
        listen_interface:
          type: string
        max_clients:
          type: number
        max_size:
          type: number
        reference_id:
          type: string
        updated_at:
          type: string
        version:
          type: number
        xclient_on:
          type: boolean
      required:
      - hostname
      - is_enabled
      - listen_interface
      - max_size
      - max_clients
      - xclient_on
      - always_on_tls
      - authentication_required
      type: object
    MovePathOnCloudStoreRequestObject:
      description: Create folder on a cloud store
      properties:
        cloud_store_id:
          description: reference id of a cloud_store
          type: string
        destination:
          type: string
        source:
          type: string
      type: object
    NewAction:
      properties:
        action_name:
          type: string
        action_schema:
          type: string
        instance_optional:
          type: boolean
        label:
          type: string
      required:
      - action_name
      - label
      - action_schema
      type: object
    NewCertificate:
      properties:
        certificate_pem:
          type: string
        generated_at:
          type: string
        hostname:
          type: string
        issuer:
          type: string
        private_key_pem:
          type: string
        public_key_pem:
          type: string
        root_certificate:
          type: string
      required:
      - hostname
      type: object
    NewCloudStore:
      properties:
        name:
          type: string
        root_path:
          type: string
        store_parameters:
          type: string
        store_provider:
          type: string
        store_type:
          type: string
      required:
      - name
      - store_type
      - store_provider
      - root_path
      - store_parameters
      type: object
    NewDataExchange:
      properties:
        attributes:
          type: string
        name:
          type: string
        options:
          type: string
        source_attributes:
          type: string
        source_type:
          type: string
        target_attributes:
          type: string
        target_type:
          type: string
      required:
      - name
      - source_attributes
      - source_type
      - target_attributes
      - target_type
      - attributes
      - options
      type: object
    NewFeed:
      properties:
        author_email:
          type: string
        author_name:
          type: string
        description:
          type: string
        enable:
          type: boolean
        enable_atom:
          type: boolean
        enable_json:
          type: boolean
        enable_rss:
          type: boolean
        feed_name:
          type: string
        link:
          type: string
        page_size:
          type: number
        title:
          type: string
      required:
      - feed_name
      - description
      type: object
    NewIntegration:
      properties:
        authentication_specification:
          type: string
        authentication_type:
          type: string
        enable:
          type: boolean
        name:
          type: string
        specification:
          type: string
        specification_format:
          type: string
        specification_language:
          type: string
      required:
      - name
      - specification_language
      - specification
      - authentication_type
      - authentication_specification
      type: object
    NewJsonSchema:
      properties:
        json_schema:
          type: string
        schema_name:
          type: string
      required:
      - schema_name
      - json_schema
      type: object
    NewMail:
      properties:
        body:
          type: string
        content_type:
          type: string
        deleted:
          type: boolean
        flags:
          type: string
        from_address:
          type: string
        has_attachment:
          type: boolean
        hash:
          type: string
        internal_date:
          type: string
        ip_addr:
          type: string
        is_tls:
          type: boolean
        mail:
          type: string
        mail_id:
          type: string
        message_id:
          type: string
        recent:
          type: boolean
        recipient:
          type: string
        reply_to_address:
          type: string
        return_path:
          type: string
        seen:
          type: boolean
        sender_address:
          type: string
        size:
          type: string
        spam:
          type: boolean
        spam_score:
          type: number
        subject:
          type: string
        to_address:
          type: string
      required:
      - message_id
      - mail_id
      - from_address
      - internal_date
      - to_address
      - reply_to_address
      - sender_address
      - subject
      - body
      - mail
      - spam_score
      - hash
      - content_type
      - recipient
      - ip_addr
      - return_path
      - size
      - flags
      type: object
    NewMailAccount:
      properties:
        password:
          type: string
        password_md5:
          type: string
        username:
          type: string
      required:
      - username
      - password
      - password_md5
      type: object
    NewMailBox:
      properties:
        attributes:
          type: string
        flags:
          type: string
        name:
          type: string
        nextuid:
          type: string
        permanent_flags:
          type: string
        subscribed:
          type: boolean
        uidvalidity:
          type: string
      required:
      - name
      - attributes
      - flags
      - permanent_flags
      type: object
    NewMailServer:
      properties:
        always_on_tls:
          type: boolean
        authentication_required:
          type: boolean
        hostname:
          type: string
        is_enabled:
          type: boolean
        listen_interface:
          type: string
        max_clients:
          type: number
        max_size:
          type: number
        xclient_on:
          type: boolean
      required:
      - hostname
      type: object
    NewOauthConnect:
      properties:
        access_type_offline:
          type: boolean
        allow_login:
          type: boolean
        auth_url:
          type: string
        client_id:
          type: string
        client_secret:
          type: string
        name:
          type: string
        profile_email_path:
          type: string
        profile_url:
          type: string
        redirect_uri:
          type: string
        response_type:
          type: string
        scope:
          type: string
        token_url:
          type: string
      required:
      - name
      - client_id
      - client_secret
      type: object
    NewOauthToken:
      properties:
        access_token:
          type: string
        expires_in:
          type: number
        refresh_token:
          type: string
        token_type:
          type: string
      required:
      - access_token
      - expires_in
      - refresh_token
      - token_type
      type: object
    NewOutbox:
      properties:
        from_address:
          type: string
        mail:
          type: string
        sent:
          type: boolean
        to_address:
          type: string
        to_host:
          type: string
      required:
      - from_address
      - to_address
      - to_host
      - mail
      type: object
    NewSite:
      properties:
        enable:
          type: boolean
        enable_https:
          type: boolean
        ftp_enabled:
          type: boolean
        hostname:
          type: string
        name:
          type: string
        path:
          type: string
        site_type:
          type: string
      required:
      - name
      - hostname
      - path
      type: object
    NewSmd:
      properties:
        events:
          type: string
        initial_state:
          type: string
        label:
          type: string
        name:
          type: string
      required:
      - name
      - label
      - initial_state
      - events
      type: object
    NewStream:
      properties:
        enable:
          type: boolean
        stream_contract:
          type: string
        stream_name:
          type: string
      required:
      - stream_name
      - stream_contract
      type: object
    NewTask:
      properties:
        action_name:
          type: string
        active:
          type: boolean
        attributes:
          type: string
        entity_name:
          type: string
        job_type:
          type: string
        name:
          type: string
        schedule:
          type: string
      required:
      - name
      - action_name
      - entity_name
      - schedule
      - active
      - attributes
      - job_type
      type: object
    NewTimeline:
      properties:
        event_type:
          type: string
        payload:
          type: string
        title:
          type: string
      required:
      - event_type
      - title
      type: object
    NewUserAccount:
      properties:
        confirmed:
          type: boolean
        email:
          type: string
        name:
          type: string
        password:
          type: string
      required:
      - name
      - email
      type: object
    NewUserOtpAccount:
      properties:
        mobile_number:
          type: string
        otp_secret:
          type: string
        verified:
          type: boolean
      required:
      - mobile_number
      - otp_secret
      type: object
    NewUsergroup:
      properties:
        name:
          type: string
      required:
      - name
      type: object
    NewWorld:
      properties:
        default_order:
          type: string
        default_permission:
          type: string
        icon:
          type: string
        is_hidden:
          type: boolean
        is_join_table:
          type: boolean
        is_state_tracking_enabled:
          type: boolean
        is_top_level:
          type: boolean
        table_name:
          type: string
        world_schema_json:
          type: string
      required:
      - table_name
      - world_schema_json
      type: object
    OauthConnect:
      properties:
        access_type_offline:
          type: boolean
        allow_login:
          type: boolean
        auth_url:
          type: string
        client_id:
          type: string
        client_secret:
          type: string
        created_at:
          type: string
        name:
          type: string
        profile_email_path:
          type: string
        profile_url:
          type: string
        redirect_uri:
          type: string
        reference_id:
          type: string
        response_type:
          type: string
        scope:
          type: string
        token_url:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - name
      - client_id
      - client_secret
      - scope
      - response_type
      - redirect_uri
      - auth_url
      - token_url
      - profile_url
      - profile_email_path
      - allow_login
      - access_type_offline
      type: object
    OauthLoginBeginOnOauthConnectRequestObject:
      description: Authenticate via OAuth
      properties:
        oauth_connect_id:
          description: reference id of a oauth_connect
          type: string
      type: object
    OauthToken:
      properties:
        access_token:
          type: string
        created_at:
          type: string
        expires_in:
          type: number
        reference_id:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - access_token
      - expires_in
      - refresh_token
      - token_type
      type: object
    OauthloginresponseOnOauthTokenRequestObject:
      description: Handle OAuth login response code and state
      properties:
        authenticator:
          type: string
        code:
          type: string
        state:
          type: string
      type: object
    Outbox:
      properties:
        created_at:
          type: string
        from_address:
          type: string
        mail:
          type: string
        reference_id:
          type: string
        sent:
          type: boolean
        to_address:
          type: string
        to_host:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - from_address
      - to_address
      - to_host
      - mail
      - sent
      type: object
    Pagination:
      properties:
        page[after]:
          description: Reference id of the object after which to look for
          type: string
        page[number]:
          description: Page number
          type: number
        page[size]:
          description: Number of item to return
          type: number
      type: object
    PaginationStatus:
      properties:
        current_page:
          description: The current page, for pagination
          type: number
        from:
          description: From page
          type: number
        last_page:
          description: The last page number in current query set
          type: number
        per_page:
          description: This is the number of results in one page
          type: number
        to:
          description: Index of the last record feched in this result
          type: number
        total:
          description: Total number of records
          type: number
      type: object
    RegisterOtpOnUserAccountRequestObject:
      description: Register Mobile Number
      properties:
        mobile_number:
          type: string
        user_account_id:
          description: reference id of a user_account
          type: string
      type: object
    RelatedStructure:
      properties:
        id:
          description: Id of the object
          type: string
        type:
          description: Type of the included object
          type: string
      type: object
    RemoveColumnOnWorldRequestObject:
      description: Delete column
      properties:
        column_name:
          type: string
        world_id:
          description: reference id of a world
          type: string
      type: object
    RemoveTableOnWorldRequestObject:
      description: Delete table
      properties:
        world_id:
          description: reference id of a world
          type: string
      type: object
    RenameColumnOnWorldRequestObject:
      description: Rename column
      properties:
        column_name:
          type: string
        new_column_name:
          type: string
        world_id:
          description: reference id of a world
          type: string
      type: object
    ResetpasswordOnUserAccountRequestObject:
      description: Reset password
      properties:
        email:
          type: string
        user_account_id:
          description: reference id of a user_account
          type: string
      type: object
    RestartDaptinOnWorldRequestObject:
      description: Restart system
      properties: {}
      type: object
    SendOtpOnUserOtpAccountRequestObject:
      description: Send OTP to mobile
      properties:
        email:
          type: string
        mobile_number:
          type: string
      type: object
    SigninOnUserAccountRequestObject:
      description: Sign in
      properties:
        email:
          type: string
        password:
          type: string
      type: object
    SignupOnUserAccountRequestObject:
      description: Sign up
      properties:
        email:
          type: string
        mobile:
          type: string
        name:
          type: string
        password:
          type: string
        passwordConfirm:
          type: string
      type: object
    Site:
      properties:
        created_at:
          type: string
        enable:
          type: boolean
        enable_https:
          type: boolean
        ftp_enabled:
          type: boolean
        hostname:
          type: string
        name:
          type: string
        path:
          type: string
        reference_id:
          type: string
        site_type:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - name
      - hostname
      - path
      - enable
      - enable_https
      - ftp_enabled
      - site_type
      type: object
    Smd:
      properties:
        created_at:
          type: string
        events:
          type: string
        initial_state:
          type: string
        label:
          type: string
        name:
          type: string
        reference_id:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - name
      - label
      - initial_state
      - events
      type: object
    Stream:
      properties:
        created_at:
          type: string
        enable:
          type: boolean
        reference_id:
          type: string
        stream_contract:
          type: string
        stream_name:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - stream_name
      - enable
      - stream_contract
      type: object
    SyncColumnStorageOnWorldRequestObject:
      description: Sync column storage
      properties:
        column_name:
          type: string
        table_name:
          type: string
      type: object
    SyncMailServersOnMailServerRequestObject:
      description: Sync Mail Servers
      properties: {}
      type: object
    SyncSiteStorageOnSiteRequestObject:
      description: Sync site storage
      properties:
        path:
          type: string
        site_id:
          description: reference id of a site
          type: string
      type: object
    Task:
      properties:
        action_name:
          type: string
        active:
          type: boolean
        attributes:
          type: string
        created_at:
          type: string
        entity_name:
          type: string
        job_type:
          type: string
        name:
          type: string
        reference_id:
          type: string
        schedule:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - name
      - action_name
      - entity_name
      - schedule
      - active
      - attributes
      - job_type
      type: object
    Timeline:
      properties:
        created_at:
          type: string
        event_type:
          type: string
        payload:
          type: string
        reference_id:
          type: string
        title:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - event_type
      - title
      type: object
    UploadCsvToSystemSchemaOnWorldRequestObject:
      description: Upload CSV to entity
      properties:
        add_missing_columns:
          type: boolean
        create_if_not_exists:
          type: boolean
        data_csv_file:
          type: string
        entity_name:
          type: string
      type: object
    UploadFileOnCloudStoreRequestObject:
      description: Upload file to external store
      properties:
        cloud_store_id:
          description: reference id of a cloud_store
          type: string
        file:
          type: string
        path:
          type: string
      type: object
    UploadSystemSchemaOnWorldRequestObject:
      description: Upload features
      properties:
        schema_file:
          type: string
      type: object
    UploadXlsToSystemSchemaOnWorldRequestObject:
      description: Upload xls to entity
      properties:
        add_missing_columns:
          type: boolean
        create_if_not_exists:
          type: boolean
        data_xls_file:
          type: string
        entity_name:
          type: string
      type: object
    UserAccount:
      properties:
        confirmed:
          type: boolean
        created_at:
          type: string
        email:
          type: string
        name:
          type: string
        password:
          type: string
        reference_id:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - name
      - email
      - confirmed
      type: object
    UserOtpAccount:
      properties:
        created_at:
          type: string
        mobile_number:
          type: string
        otp_secret:
          type: string
        reference_id:
          type: string
        updated_at:
          type: string
        verified:
          type: boolean
        version:
          type: number
      required:
      - mobile_number
      - otp_secret
      - verified
      type: object
    Usergroup:
      properties:
        created_at:
          type: string
        name:
          type: string
        reference_id:
          type: string
        updated_at:
          type: string
        version:
          type: number
      required:
      - name
      type: object
    VerifyMobileNumberOnUserOtpAccountRequestObject:
      description: Verify Mobile Number
      properties:
        email:
          type: string
        mobile_number:
          type: string
        otp:
          type: string
      type: object
    VerifyOtpOnUserAccountRequestObject:
      description: Login with OTP
      properties:
        mobile_number:
          type: string
        otp:
          type: string
      type: object
    World:
      properties:
        created_at:
          type: string
        default_order:
          type: string
        default_permission:
          type: string
        icon:
          type: string
        is_hidden:
          type: boolean
        is_join_table:
          type: boolean
        is_state_tracking_enabled:
          type: boolean
        is_top_level:
          type: boolean
        reference_id:
          type: string
        table_name:
          type: string
        updated_at:
          type: string
        version:
          type: number
        world_schema_json:
          type: string
      required:
      - table_name
      - world_schema_json
      - default_permission
      - is_top_level
      - is_hidden
      - is_join_table
      - is_state_tracking_enabled
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  contact:
    email: artpar@gmamil.com
    name: Parth
    url: https://dapt.in
  description: Daptin API server
  license:
    name: MIT
  title: Daptin API endpoint
  version: 1.0.0
openapi: 3.0.0
paths:
  /action/certificate/download_certificate:
    post:
      operationId: ExecuteDownloadCertificateActionOnCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadCertificateOnCertificateRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of download_certificate
      summary: Download certificate
      tags:
      - certificate
      - action
  /action/certificate/download_public_key:
    post:
      operationId: ExecuteDownloadPublicKeyActionOnCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadPublicKeyOnCertificateRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of download_public_key
      summary: Download public key
      tags:
      - certificate
      - action
  /action/certificate/generate_acme_certificate:
    post:
      operationId: ExecuteGenerateAcmeCertificateActionOnCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAcmeCertificateOnCertificateRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of generate_acme_certificate
      summary: Generate ACME certificate
      tags:
      - certificate
      - action
  /action/certificate/generate_self_certificate:
    post:
      operationId: ExecuteGenerateSelfCertificateActionOnCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateSelfCertificateOnCertificateRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of generate_self_certificate
      summary: Generate Self certificate
      tags:
      - certificate
      - action
  /action/cloud_store/create_folder:
    post:
      operationId: ExecuteCreateFolderActionOnCloudStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolderOnCloudStoreRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of create_folder
      summary: Create folder on a cloud store
      tags:
      - cloud_store
      - action
  /action/cloud_store/create_site:
    post:
      operationId: ExecuteCreateSiteActionOnCloudStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSiteOnCloudStoreRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of create_site
      summary: Create new site on this store
      tags:
      - cloud_store
      - action
  /action/cloud_store/delete_path:
    post:
      operationId: ExecuteDeletePathActionOnCloudStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePathOnCloudStoreRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of delete_path
      summary: Delete path on a cloud store
      tags:
      - cloud_store
      - action
  /action/cloud_store/move_path:
    post:
      operationId: ExecuteMovePathActionOnCloudStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovePathOnCloudStoreRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of move_path
      summary: Create folder on a cloud store
      tags:
      - cloud_store
      - action
  /action/cloud_store/upload_file:
    post:
      operationId: ExecuteUploadFileActionOnCloudStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadFileOnCloudStoreRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of upload_file
      summary: Upload file to external store
      tags:
      - cloud_store
      - action
  /action/integration/install_integration:
    post:
      operationId: ExecuteInstallIntegrationActionOnIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallIntegrationOnIntegrationRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of install_integration
      summary: Install integration
      tags:
      - integration
      - action
  /action/mail_server/sync_mail_servers:
    post:
      operationId: ExecuteSyncMailServersActionOnMailServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncMailServersOnMailServerRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of sync_mail_servers
      summary: Sync Mail Servers
      tags:
      - mail_server
      - action
  /action/oauth_connect/oauth_login_begin:
    post:
      operationId: ExecuteOauthLoginBeginActionOnOauthConnect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OauthLoginBeginOnOauthConnectRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of oauth_login_begin
      summary: Authenticate via OAuth
      tags:
      - oauth_connect
      - action
  /action/oauth_token/oauth.login.response:
    post:
      operationId: ExecuteOauthloginresponseActionOnOauthToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OauthloginresponseOnOauthTokenRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of oauth.login.response
      summary: Handle OAuth login response code and state
      tags:
      - oauth_token
      - action
  /action/site/delete_file:
    post:
      operationId: ExecuteDeleteFileActionOnSite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFileOnSiteRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of delete_file
      summary: Delete file in the site
      tags:
      - site
      - action
  /action/site/get_file:
    post:
      operationId: ExecuteGetFileActionOnSite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFileOnSiteRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of get_file
      summary: Get file at the path in site
      tags:
      - site
      - action
  /action/site/list_files:
    post:
      operationId: ExecuteListFilesActionOnSite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFilesOnSiteRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of list_files
      summary: List files in the site path
      tags:
      - site
      - action
  /action/site/sync_site_storage:
    post:
      operationId: ExecuteSyncSiteStorageActionOnSite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncSiteStorageOnSiteRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of sync_site_storage
      summary: Sync site storage
      tags:
      - site
      - action
  /action/user_account/register_otp:
    post:
      operationId: ExecuteRegisterOtpActionOnUserAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterOtpOnUserAccountRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of register_otp
      summary: Register Mobile Number
      tags:
      - user_account
      - action
  /action/user_account/resetpassword:
    post:
      operationId: ExecuteResetpasswordActionOnUserAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetpasswordOnUserAccountRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of resetpassword
      summary: Reset password
      tags:
      - user_account
      - action
  /action/user_account/signin:
    post:
      operationId: ExecuteSigninActionOnUserAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigninOnUserAccountRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of signin
      summary: Sign in
      tags:
      - user_account
      - action
  /action/user_account/signup:
    post:
      operationId: ExecuteSignupActionOnUserAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupOnUserAccountRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of signup
      summary: Sign up
      tags:
      - user_account
      - action
  /action/user_account/verify_otp:
    post:
      operationId: ExecuteVerifyOtpActionOnUserAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOtpOnUserAccountRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of verify_otp
      summary: Login with OTP
      tags:
      - user_account
      - action
  /action/user_otp_account/send_otp:
    post:
      operationId: ExecuteSendOtpActionOnUserOtpAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendOtpOnUserOtpAccountRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of send_otp
      summary: Send OTP to mobile
      tags:
      - user_otp_account
      - action
  /action/user_otp_account/verify_mobile_number:
    post:
      operationId: ExecuteVerifyMobileNumberActionOnUserOtpAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyMobileNumberOnUserOtpAccountRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of verify_mobile_number
      summary: Verify Mobile Number
      tags:
      - user_otp_account
      - action
  /action/world/add_exchange:
    post:
      operationId: ExecuteAddExchangeActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddExchangeOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of add_exchange
      summary: Add new data exchange
      tags:
      - world
      - action
  /action/world/become_an_administrator:
    post:
      operationId: ExecuteBecomeAnAdministratorActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BecomeAnAdministratorOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of become_an_administrator
      summary: Become Daptin Administrator
      tags:
      - world
      - action
  /action/world/download_system_schema:
    post:
      operationId: ExecuteDownloadSystemSchemaActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadSystemSchemaOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of download_system_schema
      summary: Download system schema
      tags:
      - world
      - action
  /action/world/export_csv_data:
    post:
      operationId: ExecuteExportCsvDataActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportCsvDataOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of export_csv_data
      summary: Export CSV data
      tags:
      - world
      - action
  /action/world/export_data:
    post:
      operationId: ExecuteExportDataActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportDataOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of export_data
      summary: Export data for backup
      tags:
      - world
      - action
  /action/world/generate_random_data:
    post:
      operationId: ExecuteGenerateRandomDataActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRandomDataOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of generate_random_data
      summary: Generate random data
      tags:
      - world
      - action
  /action/world/import_data:
    post:
      operationId: ExecuteImportDataActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportDataOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of import_data
      summary: Import data from dump
      tags:
      - world
      - action
  /action/world/import_files_from_store:
    post:
      operationId: ExecuteImportFilesFromStoreActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportFilesFromStoreOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of import_files_from_store
      summary: Import files data to a table
      tags:
      - world
      - action
  /action/world/remove_column:
    post:
      operationId: ExecuteRemoveColumnActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveColumnOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of remove_column
      summary: Delete column
      tags:
      - world
      - action
  /action/world/remove_table:
    post:
      operationId: ExecuteRemoveTableActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTableOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of remove_table
      summary: Delete table
      tags:
      - world
      - action
  /action/world/rename_column:
    post:
      operationId: ExecuteRenameColumnActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameColumnOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of rename_column
      summary: Rename column
      tags:
      - world
      - action
  /action/world/restart_daptin:
    post:
      operationId: ExecuteRestartDaptinActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartDaptinOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of restart_daptin
      summary: Restart system
      tags:
      - world
      - action
  /action/world/sync_column_storage:
    post:
      operationId: ExecuteSyncColumnStorageActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncColumnStorageOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of sync_column_storage
      summary: Sync column storage
      tags:
      - world
      - action
  /action/world/upload_csv_to_system_schema:
    post:
      operationId: ExecuteUploadCsvToSystemSchemaActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadCsvToSystemSchemaOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of upload_csv_to_system_schema
      summary: Upload CSV to entity
      tags:
      - world
      - action
  /action/world/upload_system_schema:
    post:
      operationId: ExecuteUploadSystemSchemaActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSystemSchemaOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of upload_system_schema
      summary: Upload features
      tags:
      - world
      - action
  /action/world/upload_xls_to_system_schema:
    post:
      operationId: ExecuteUploadXlsToSystemSchemaActionOnWorld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadXlsToSystemSchemaOnWorldRequestObject'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionResponse'
                type: array
          description: action response of upload_xls_to_system_schema
      summary: Upload xls to entity
      tags:
      - world
      - action
  /api/action:
    get:
      description: Returns a list of Action
      operationId: GetAction
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Action'
                type: array
          description: list of all action
      summary: List all action
      tags:
      - action
      - find
      - get
    post:
      operationId: CreateAction
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewAction'
                  type: object
              type: object
        description: action to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Action'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: action response
      summary: Create a new action
      tags:
      - action
      - create
  /api/action/{referenceId}:
    delete:
      description: Delete a action
      operationId: DeleteAction
      parameters:
      - description: Reference Id of the action
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete action by reference id
      summary: Delete action
      tags:
      - action
      - delete
    get:
      description: Get action by id
      operationId: GetActionByReferenceId
      parameters:
      - description: Reference Id of the action
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: get action by reference id
      summary: Get action by id
      tags:
      - action
    patch:
      description: Edit an existing action
      operationId: UpdateAction
      parameters:
      - description: Reference Id of the action
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/Action'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Action'
                      id:
                        type: string
                      relationships:
                        properties:
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          world_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated action
      summary: Update existing action
      tags:
      - action
  /api/action/{referenceId}/user_account:
    delete:
      description: Remove a related action from the user_account_id
      operationId: DeleteUserAccountIdOfAction
      parameters:
      - description: Reference Id of the action
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of action
      tags:
      - user_account_id
      - action
      - action_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a action
      operationId: GetUserAccountIdOfActionId
      parameters:
      - description: Reference Id of the action
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of action
      tags:
      - user_account
      - find
      - get
  /api/action/{referenceId}/usergroup:
    delete:
      description: Remove a related action from the usergroup_id
      operationId: DeleteUsergroupIdOfAction
      parameters:
      - description: Reference Id of the action
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of action
      tags:
      - usergroup_id
      - action
      - action_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a action
      operationId: GetUsergroupIdOfActionId
      parameters:
      - description: Reference Id of the action
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of action
      tags:
      - usergroup
      - find
      - get
  /api/action/{referenceId}/world:
    delete:
      description: Remove a related action from the world_id
      operationId: DeleteWorldIdOfAction
      parameters:
      - description: Reference Id of the action
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of world
      summary: Delete related world_id of action
      tags:
      - world_id
      - action
      - action_id
      - world
      - belongs_to
      - delete
    get:
      description: Returns a list of all World related to a action
      operationId: GetWorldIdOfActionId
      parameters:
      - description: Reference Id of the action
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/World'
                type: array
          description: list of all world
      summary: Fetch related world_id of action
      tags:
      - world
      - find
      - get
  /api/certificate:
    get:
      description: Returns a list of Certificate
      operationId: GetCertificate
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Certificate'
                type: array
          description: list of all certificate
      summary: List all certificate
      tags:
      - certificate
      - find
      - get
    post:
      operationId: CreateCertificate
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewCertificate'
                  type: object
              type: object
        description: certificate to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Certificate'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: certificate response
      summary: Create a new certificate
      tags:
      - certificate
      - create
  /api/certificate/{referenceId}:
    delete:
      description: Delete a certificate
      operationId: DeleteCertificate
      parameters:
      - description: Reference Id of the certificate
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete certificate by reference id
      summary: Delete certificate
      tags:
      - certificate
      - delete
    get:
      description: Get certificate by id
      operationId: GetCertificateByReferenceId
      parameters:
      - description: Reference Id of the certificate
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: get certificate by reference id
      summary: Get certificate by id
      tags:
      - certificate
    patch:
      description: Edit an existing certificate
      operationId: UpdateCertificate
      parameters:
      - description: Reference Id of the certificate
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/Certificate'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Certificate'
                      id:
                        type: string
                      relationships:
                        properties:
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated certificate
      summary: Update existing certificate
      tags:
      - certificate
  /api/certificate/{referenceId}/user_account:
    delete:
      description: Remove a related certificate from the user_account_id
      operationId: DeleteUserAccountIdOfCertificate
      parameters:
      - description: Reference Id of the certificate
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of certificate
      tags:
      - user_account_id
      - certificate
      - certificate_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a certificate
      operationId: GetUserAccountIdOfCertificateId
      parameters:
      - description: Reference Id of the certificate
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of certificate
      tags:
      - user_account
      - find
      - get
  /api/certificate/{referenceId}/usergroup:
    delete:
      description: Remove a related certificate from the usergroup_id
      operationId: DeleteUsergroupIdOfCertificate
      parameters:
      - description: Reference Id of the certificate
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of certificate
      tags:
      - usergroup_id
      - certificate
      - certificate_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a certificate
      operationId: GetUsergroupIdOfCertificateId
      parameters:
      - description: Reference Id of the certificate
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of certificate
      tags:
      - usergroup
      - find
      - get
  /api/cloud_store:
    get:
      description: Returns a list of Cloud store
      operationId: GetCloudStore
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CloudStore'
                type: array
          description: list of all cloud_store
      summary: List all cloud_store
      tags:
      - cloud_store
      - find
      - get
    post:
      operationId: CreateCloudStore
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewCloudStore'
                  type: object
              type: object
        description: cloud_store to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/CloudStore'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: cloud_store response
      summary: Create a new cloud_store
      tags:
      - cloud_store
      - create
  /api/cloud_store/{referenceId}:
    delete:
      description: Delete a cloud_store
      operationId: DeleteCloudStore
      parameters:
      - description: Reference Id of the cloud_store
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete cloud_store by reference id
      summary: Delete cloud_store
      tags:
      - cloud_store
      - delete
    get:
      description: Get cloud_store by id
      operationId: GetCloudStoreByReferenceId
      parameters:
      - description: Reference Id of the cloud_store
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudStore'
          description: get cloud_store by reference id
      summary: Get cloud_store by id
      tags:
      - cloud_store
    patch:
      description: Edit an existing cloud_store
      operationId: UpdateCloudStore
      parameters:
      - description: Reference Id of the cloud_store
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/CloudStore'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/CloudStore'
                      id:
                        type: string
                      relationships:
                        properties:
                          oauth_token_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          site_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated cloud_store
      summary: Delete related site_id of cloud_store
      tags:
      - cloud_store_id
      - site
      - site_id
      - cloud_store
      - has_one
      - delete
  /api/cloud_store/{referenceId}/oauth_token:
    delete:
      description: Remove a related cloud_store from the oauth_token_id
      operationId: DeleteOauthTokenIdOfCloudStore
      parameters:
      - description: Reference Id of the cloud_store
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of oauth_token
      summary: Delete related oauth_token_id of cloud_store
      tags:
      - oauth_token_id
      - cloud_store
      - cloud_store_id
      - oauth_token
      - has_one
      - delete
    get:
      description: Returns a list of all Oauth token related to a cloud_store
      operationId: GetOauthTokenIdOfCloudStoreId
      parameters:
      - description: Reference Id of the cloud_store
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OauthToken'
                type: array
          description: list of all oauth_token
      summary: Fetch related oauth_token_id of cloud_store
      tags:
      - oauth_token
      - find
      - get
  /api/cloud_store/{referenceId}/site:
    delete:
      description: Remove a related site_id from the cloud_store_id
      operationId: DeleteSiteOfCloudStore
      parameters:
      - description: Reference Id of the cloud_store
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of site
      tags:
      - site
    get:
      description: Returns a list of Site
      operationId: RelatedSiteIdOfCloudStore
      parameters:
      - description: Reference Id of the cloud_store
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Site'
                type: array
          description: list of all site
      summary: Related SiteId of a CloudStore
      tags:
      - site
      - find
      - get
  /api/cloud_store/{referenceId}/user_account:
    delete:
      description: Remove a related cloud_store from the user_account_id
      operationId: DeleteUserAccountIdOfCloudStore
      parameters:
      - description: Reference Id of the cloud_store
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of cloud_store
      tags:
      - user_account_id
      - cloud_store
      - cloud_store_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a cloud_store
      operationId: GetUserAccountIdOfCloudStoreId
      parameters:
      - description: Reference Id of the cloud_store
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of cloud_store
      tags:
      - user_account
      - find
      - get
  /api/cloud_store/{referenceId}/usergroup:
    delete:
      description: Remove a related cloud_store from the usergroup_id
      operationId: DeleteUsergroupIdOfCloudStore
      parameters:
      - description: Reference Id of the cloud_store
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of cloud_store
      tags:
      - usergroup_id
      - cloud_store
      - cloud_store_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a cloud_store
      operationId: GetUsergroupIdOfCloudStoreId
      parameters:
      - description: Reference Id of the cloud_store
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of cloud_store
      tags:
      - usergroup
      - find
      - get
  /api/data_exchange:
    get:
      description: Returns a list of Data exchange
      operationId: GetDataExchange
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataExchange'
                type: array
          description: list of all data_exchange
      summary: List all data_exchange
      tags:
      - data_exchange
      - find
      - get
    post:
      operationId: CreateDataExchange
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewDataExchange'
                  type: object
              type: object
        description: data_exchange to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/DataExchange'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: data_exchange response
      summary: Create a new data_exchange
      tags:
      - data_exchange
      - create
  /api/data_exchange/{referenceId}:
    delete:
      description: Delete a data_exchange
      operationId: DeleteDataExchange
      parameters:
      - description: Reference Id of the data_exchange
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete data_exchange by reference id
      summary: Delete data_exchange
      tags:
      - data_exchange
      - delete
    get:
      description: Get data_exchange by id
      operationId: GetDataExchangeByReferenceId
      parameters:
      - description: Reference Id of the data_exchange
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataExchange'
          description: get data_exchange by reference id
      summary: Get data_exchange by id
      tags:
      - data_exchange
    patch:
      description: Edit an existing data_exchange
      operationId: UpdateDataExchange
      parameters:
      - description: Reference Id of the data_exchange
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/DataExchange'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/DataExchange'
                      id:
                        type: string
                      relationships:
                        properties:
                          oauth_token_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated data_exchange
      summary: Update existing data_exchange
      tags:
      - data_exchange
  /api/data_exchange/{referenceId}/oauth_token:
    delete:
      description: Remove a related data_exchange from the oauth_token_id
      operationId: DeleteOauthTokenIdOfDataExchange
      parameters:
      - description: Reference Id of the data_exchange
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of oauth_token
      summary: Delete related oauth_token_id of data_exchange
      tags:
      - oauth_token_id
      - data_exchange
      - data_exchange_id
      - oauth_token
      - has_one
      - delete
    get:
      description: Returns a list of all Oauth token related to a data_exchange
      operationId: GetOauthTokenIdOfDataExchangeId
      parameters:
      - description: Reference Id of the data_exchange
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OauthToken'
                type: array
          description: list of all oauth_token
      summary: Fetch related oauth_token_id of data_exchange
      tags:
      - oauth_token
      - find
      - get
  /api/data_exchange/{referenceId}/user_account:
    delete:
      description: Remove a related data_exchange from the user_account_id
      operationId: DeleteUserAccountIdOfDataExchange
      parameters:
      - description: Reference Id of the data_exchange
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of data_exchange
      tags:
      - user_account_id
      - data_exchange
      - data_exchange_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a data_exchange
      operationId: GetUserAccountIdOfDataExchangeId
      parameters:
      - description: Reference Id of the data_exchange
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of data_exchange
      tags:
      - user_account
      - find
      - get
  /api/data_exchange/{referenceId}/usergroup:
    delete:
      description: Remove a related data_exchange from the usergroup_id
      operationId: DeleteUsergroupIdOfDataExchange
      parameters:
      - description: Reference Id of the data_exchange
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of data_exchange
      tags:
      - usergroup_id
      - data_exchange
      - data_exchange_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a data_exchange
      operationId: GetUsergroupIdOfDataExchangeId
      parameters:
      - description: Reference Id of the data_exchange
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of data_exchange
      tags:
      - usergroup
      - find
      - get
  /api/feed:
    get:
      description: Returns a list of Feed
      operationId: GetFeed
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feed'
                type: array
          description: list of all feed
      summary: List all feed
      tags:
      - feed
      - find
      - get
    post:
      operationId: CreateFeed
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewFeed'
                  type: object
              type: object
        description: feed to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Feed'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: feed response
      summary: Create a new feed
      tags:
      - feed
      - create
  /api/feed/{referenceId}:
    delete:
      description: Delete a feed
      operationId: DeleteFeed
      parameters:
      - description: Reference Id of the feed
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete feed by reference id
      summary: Delete feed
      tags:
      - feed
      - delete
    get:
      description: Get feed by id
      operationId: GetFeedByReferenceId
      parameters:
      - description: Reference Id of the feed
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
          description: get feed by reference id
      summary: Get feed by id
      tags:
      - feed
    patch:
      description: Edit an existing feed
      operationId: UpdateFeed
      parameters:
      - description: Reference Id of the feed
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/Feed'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Feed'
                      id:
                        type: string
                      relationships:
                        properties:
                          stream_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated feed
      summary: Update existing feed
      tags:
      - feed
  /api/feed/{referenceId}/stream:
    delete:
      description: Remove a related feed from the stream_id
      operationId: DeleteStreamIdOfFeed
      parameters:
      - description: Reference Id of the feed
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of stream
      summary: Delete related stream_id of feed
      tags:
      - stream_id
      - feed
      - feed_id
      - stream
      - belongs_to
      - delete
    get:
      description: Returns a list of all Stream related to a feed
      operationId: GetStreamIdOfFeedId
      parameters:
      - description: Reference Id of the feed
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Stream'
                type: array
          description: list of all stream
      summary: Fetch related stream_id of feed
      tags:
      - stream
      - find
      - get
  /api/feed/{referenceId}/user_account:
    delete:
      description: Remove a related feed from the user_account_id
      operationId: DeleteUserAccountIdOfFeed
      parameters:
      - description: Reference Id of the feed
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of feed
      tags:
      - user_account_id
      - feed
      - feed_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a feed
      operationId: GetUserAccountIdOfFeedId
      parameters:
      - description: Reference Id of the feed
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of feed
      tags:
      - user_account
      - find
      - get
  /api/feed/{referenceId}/usergroup:
    delete:
      description: Remove a related feed from the usergroup_id
      operationId: DeleteUsergroupIdOfFeed
      parameters:
      - description: Reference Id of the feed
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of feed
      tags:
      - usergroup_id
      - feed
      - feed_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a feed
      operationId: GetUsergroupIdOfFeedId
      parameters:
      - description: Reference Id of the feed
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of feed
      tags:
      - usergroup
      - find
      - get
  /api/integration:
    get:
      description: Returns a list of Integration
      operationId: GetIntegration
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Integration'
                type: array
          description: list of all integration
      summary: List all integration
      tags:
      - integration
      - find
      - get
    post:
      operationId: CreateIntegration
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewIntegration'
                  type: object
              type: object
        description: integration to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Integration'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: integration response
      summary: Create a new integration
      tags:
      - integration
      - create
  /api/integration/{referenceId}:
    delete:
      description: Delete a integration
      operationId: DeleteIntegration
      parameters:
      - description: Reference Id of the integration
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete integration by reference id
      summary: Delete integration
      tags:
      - integration
      - delete
    get:
      description: Get integration by id
      operationId: GetIntegrationByReferenceId
      parameters:
      - description: Reference Id of the integration
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: get integration by reference id
      summary: Get integration by id
      tags:
      - integration
    patch:
      description: Edit an existing integration
      operationId: UpdateIntegration
      parameters:
      - description: Reference Id of the integration
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/Integration'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Integration'
                      id:
                        type: string
                      relationships:
                        properties:
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated integration
      summary: Update existing integration
      tags:
      - integration
  /api/integration/{referenceId}/user_account:
    delete:
      description: Remove a related integration from the user_account_id
      operationId: DeleteUserAccountIdOfIntegration
      parameters:
      - description: Reference Id of the integration
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of integration
      tags:
      - user_account_id
      - integration
      - integration_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a integration
      operationId: GetUserAccountIdOfIntegrationId
      parameters:
      - description: Reference Id of the integration
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of integration
      tags:
      - user_account
      - find
      - get
  /api/integration/{referenceId}/usergroup:
    delete:
      description: Remove a related integration from the usergroup_id
      operationId: DeleteUsergroupIdOfIntegration
      parameters:
      - description: Reference Id of the integration
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of integration
      tags:
      - usergroup_id
      - integration
      - integration_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a integration
      operationId: GetUsergroupIdOfIntegrationId
      parameters:
      - description: Reference Id of the integration
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of integration
      tags:
      - usergroup
      - find
      - get
  /api/json_schema:
    get:
      description: Returns a list of Json schema
      operationId: GetJsonSchema
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JsonSchema'
                type: array
          description: list of all json_schema
      summary: List all json_schema
      tags:
      - json_schema
      - find
      - get
    post:
      operationId: CreateJsonSchema
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewJsonSchema'
                  type: object
              type: object
        description: json_schema to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/JsonSchema'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: json_schema response
      summary: Create a new json_schema
      tags:
      - json_schema
      - create
  /api/json_schema/{referenceId}:
    delete:
      description: Delete a json_schema
      operationId: DeleteJsonSchema
      parameters:
      - description: Reference Id of the json_schema
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete json_schema by reference id
      summary: Delete json_schema
      tags:
      - json_schema
      - delete
    get:
      description: Get json_schema by id
      operationId: GetJsonSchemaByReferenceId
      parameters:
      - description: Reference Id of the json_schema
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
          description: get json_schema by reference id
      summary: Get json_schema by id
      tags:
      - json_schema
    patch:
      description: Edit an existing json_schema
      operationId: UpdateJsonSchema
      parameters:
      - description: Reference Id of the json_schema
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/JsonSchema'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/JsonSchema'
                      id:
                        type: string
                      relationships:
                        properties:
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated json_schema
      summary: Update existing json_schema
      tags:
      - json_schema
  /api/json_schema/{referenceId}/user_account:
    delete:
      description: Remove a related json_schema from the user_account_id
      operationId: DeleteUserAccountIdOfJsonSchema
      parameters:
      - description: Reference Id of the json_schema
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of json_schema
      tags:
      - user_account_id
      - json_schema
      - json_schema_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a json_schema
      operationId: GetUserAccountIdOfJsonSchemaId
      parameters:
      - description: Reference Id of the json_schema
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of json_schema
      tags:
      - user_account
      - find
      - get
  /api/json_schema/{referenceId}/usergroup:
    delete:
      description: Remove a related json_schema from the usergroup_id
      operationId: DeleteUsergroupIdOfJsonSchema
      parameters:
      - description: Reference Id of the json_schema
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of json_schema
      tags:
      - usergroup_id
      - json_schema
      - json_schema_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a json_schema
      operationId: GetUsergroupIdOfJsonSchemaId
      parameters:
      - description: Reference Id of the json_schema
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of json_schema
      tags:
      - usergroup
      - find
      - get
  /api/mail:
    get:
      description: Returns a list of Mail
      operationId: GetMail
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Mail'
                type: array
          description: list of all mail
      summary: List all mail
      tags:
      - mail
      - find
      - get
    post:
      operationId: CreateMail
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewMail'
                  type: object
              type: object
        description: mail to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Mail'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: mail response
      summary: Create a new mail
      tags:
      - mail
      - create
  /api/mail/{referenceId}:
    delete:
      description: Delete a mail
      operationId: DeleteMail
      parameters:
      - description: Reference Id of the mail
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete mail by reference id
      summary: Delete mail
      tags:
      - mail
      - delete
    get:
      description: Get mail by id
      operationId: GetMailByReferenceId
      parameters:
      - description: Reference Id of the mail
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mail'
          description: get mail by reference id
      summary: Get mail by id
      tags:
      - mail
    patch:
      description: Edit an existing mail
      operationId: UpdateMail
      parameters:
      - description: Reference Id of the mail
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/Mail'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Mail'
                      id:
                        type: string
                      relationships:
                        properties:
                          mail_box_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated mail
      summary: Update existing mail
      tags:
      - mail
  /api/mail/{referenceId}/mail_box:
    delete:
      description: Remove a related mail from the mail_box_id
      operationId: DeleteMailBoxIdOfMail
      parameters:
      - description: Reference Id of the mail
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of mail_box
      summary: Delete related mail_box_id of mail
      tags:
      - mail_box_id
      - mail
      - mail_id
      - mail_box
      - belongs_to
      - delete
    get:
      description: Returns a list of all Mail box related to a mail
      operationId: GetMailBoxIdOfMailId
      parameters:
      - description: Reference Id of the mail
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MailBox'
                type: array
          description: list of all mail_box
      summary: Fetch related mail_box_id of mail
      tags:
      - mail_box
      - find
      - get
  /api/mail/{referenceId}/user_account:
    delete:
      description: Remove a related mail from the user_account_id
      operationId: DeleteUserAccountIdOfMail
      parameters:
      - description: Reference Id of the mail
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of mail
      tags:
      - user_account_id
      - mail
      - mail_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a mail
      operationId: GetUserAccountIdOfMailId
      parameters:
      - description: Reference Id of the mail
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of mail
      tags:
      - user_account
      - find
      - get
  /api/mail/{referenceId}/usergroup:
    delete:
      description: Remove a related mail from the usergroup_id
      operationId: DeleteUsergroupIdOfMail
      parameters:
      - description: Reference Id of the mail
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of mail
      tags:
      - usergroup_id
      - mail
      - mail_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a mail
      operationId: GetUsergroupIdOfMailId
      parameters:
      - description: Reference Id of the mail
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of mail
      tags:
      - usergroup
      - find
      - get
  /api/mail_account:
    get:
      description: Returns a list of Mail account
      operationId: GetMailAccount
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MailAccount'
                type: array
          description: list of all mail_account
      summary: List all mail_account
      tags:
      - mail_account
      - find
      - get
    post:
      operationId: CreateMailAccount
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewMailAccount'
                  type: object
              type: object
        description: mail_account to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/MailAccount'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: mail_account response
      summary: Create a new mail_account
      tags:
      - mail_account
      - create
  /api/mail_account/{referenceId}:
    delete:
      description: Delete a mail_account
      operationId: DeleteMailAccount
      parameters:
      - description: Reference Id of the mail_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete mail_account by reference id
      summary: Delete mail_account
      tags:
      - mail_account
      - delete
    get:
      description: Get mail_account by id
      operationId: GetMailAccountByReferenceId
      parameters:
      - description: Reference Id of the mail_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailAccount'
          description: get mail_account by reference id
      summary: Get mail_account by id
      tags:
      - mail_account
    patch:
      description: Edit an existing mail_account
      operationId: UpdateMailAccount
      parameters:
      - description: Reference Id of the mail_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/MailAccount'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/MailAccount'
                      id:
                        type: string
                      relationships:
                        properties:
                          mail_box_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          mail_server_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated mail_account
      summary: Delete related mail_box_id of mail_account
      tags:
      - mail_account_id
      - mail_box
      - mail_box_id
      - mail_account
      - belongs_to
      - delete
  /api/mail_account/{referenceId}/mail_box:
    delete:
      description: Remove a related mail_box_id from the mail_account_id
      operationId: DeleteMailBoxOfMailAccount
      parameters:
      - description: Reference Id of the mail_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of mail_box
      tags:
      - mail_box
    get:
      description: Returns a list of Mail box
      operationId: RelatedMailBoxIdOfMailAccount
      parameters:
      - description: Reference Id of the mail_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MailBox'
                type: array
          description: list of all mail_box
      summary: Related MailBoxId of a MailAccount
      tags:
      - mail_box
      - find
      - get
  /api/mail_account/{referenceId}/mail_server:
    delete:
      description: Remove a related mail_account from the mail_server_id
      operationId: DeleteMailServerIdOfMailAccount
      parameters:
      - description: Reference Id of the mail_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of mail_server
      summary: Delete related mail_server_id of mail_account
      tags:
      - mail_server_id
      - mail_account
      - mail_account_id
      - mail_server
      - belongs_to
      - delete
    get:
      description: Returns a list of all Mail server related to a mail_account
      operationId: GetMailServerIdOfMailAccountId
      parameters:
      - description: Reference Id of the mail_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MailServer'
                type: array
          description: list of all mail_server
      summary: Fetch related mail_server_id of mail_account
      tags:
      - mail_server
      - find
      - get
  /api/mail_account/{referenceId}/user_account:
    delete:
      description: Remove a related mail_account from the user_account_id
      operationId: DeleteUserAccountIdOfMailAccount
      parameters:
      - description: Reference Id of the mail_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of mail_account
      tags:
      - user_account_id
      - mail_account
      - mail_account_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a mail_account
      operationId: GetUserAccountIdOfMailAccountId
      parameters:
      - description: Reference Id of the mail_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of mail_account
      tags:
      - user_account
      - find
      - get
  /api/mail_account/{referenceId}/usergroup:
    delete:
      description: Remove a related mail_account from the usergroup_id
      operationId: DeleteUsergroupIdOfMailAccount
      parameters:
      - description: Reference Id of the mail_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of mail_account
      tags:
      - usergroup_id
      - mail_account
      - mail_account_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a mail_account
      operationId: GetUsergroupIdOfMailAccountId
      parameters:
      - description: Reference Id of the mail_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of mail_account
      tags:
      - usergroup
      - find
      - get
  /api/mail_box:
    get:
      description: Returns a list of Mail box
      operationId: GetMailBox
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MailBox'
                type: array
          description: list of all mail_box
      summary: List all mail_box
      tags:
      - mail_box
      - find
      - get
    post:
      operationId: CreateMailBox
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewMailBox'
                  type: object
              type: object
        description: mail_box to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/MailBox'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: mail_box response
      summary: Create a new mail_box
      tags:
      - mail_box
      - create
  /api/mail_box/{referenceId}:
    delete:
      description: Delete a mail_box
      operationId: DeleteMailBox
      parameters:
      - description: Reference Id of the mail_box
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete mail_box by reference id
      summary: Delete mail_box
      tags:
      - mail_box
      - delete
    get:
      description: Get mail_box by id
      operationId: GetMailBoxByReferenceId
      parameters:
      - description: Reference Id of the mail_box
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailBox'
          description: get mail_box by reference id
      summary: Get mail_box by id
      tags:
      - mail_box
    patch:
      description: Edit an existing mail_box
      operationId: UpdateMailBox
      parameters:
      - description: Reference Id of the mail_box
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/MailBox'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/MailBox'
                      id:
                        type: string
                      relationships:
                        properties:
                          mail_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          mail_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated mail_box
      summary: Delete related mail_id of mail_box
      tags:
      - mail_box_id
      - mail
      - mail_id
      - mail_box
      - belongs_to
      - delete
  /api/mail_box/{referenceId}/mail:
    delete:
      description: Remove a related mail_id from the mail_box_id
      operationId: DeleteMailOfMailBox
      parameters:
      - description: Reference Id of the mail_box
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of mail
      tags:
      - mail
    get:
      description: Returns a list of Mail
      operationId: RelatedMailIdOfMailBox
      parameters:
      - description: Reference Id of the mail_box
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Mail'
                type: array
          description: list of all mail
      summary: Related MailId of a MailBox
      tags:
      - mail
      - find
      - get
  /api/mail_box/{referenceId}/mail_account:
    delete:
      description: Remove a related mail_box from the mail_account_id
      operationId: DeleteMailAccountIdOfMailBox
      parameters:
      - description: Reference Id of the mail_box
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of mail_account
      summary: Delete related mail_account_id of mail_box
      tags:
      - mail_account_id
      - mail_box
      - mail_box_id
      - mail_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all Mail account related to a mail_box
      operationId: GetMailAccountIdOfMailBoxId
      parameters:
      - description: Reference Id of the mail_box
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MailAccount'
                type: array
          description: list of all mail_account
      summary: Fetch related mail_account_id of mail_box
      tags:
      - mail_account
      - find
      - get
  /api/mail_box/{referenceId}/user_account:
    delete:
      description: Remove a related mail_box from the user_account_id
      operationId: DeleteUserAccountIdOfMailBox
      parameters:
      - description: Reference Id of the mail_box
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of mail_box
      tags:
      - user_account_id
      - mail_box
      - mail_box_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a mail_box
      operationId: GetUserAccountIdOfMailBoxId
      parameters:
      - description: Reference Id of the mail_box
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of mail_box
      tags:
      - user_account
      - find
      - get
  /api/mail_box/{referenceId}/usergroup:
    delete:
      description: Remove a related mail_box from the usergroup_id
      operationId: DeleteUsergroupIdOfMailBox
      parameters:
      - description: Reference Id of the mail_box
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of mail_box
      tags:
      - usergroup_id
      - mail_box
      - mail_box_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a mail_box
      operationId: GetUsergroupIdOfMailBoxId
      parameters:
      - description: Reference Id of the mail_box
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of mail_box
      tags:
      - usergroup
      - find
      - get
  /api/mail_server:
    get:
      description: Returns a list of Mail server
      operationId: GetMailServer
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MailServer'
                type: array
          description: list of all mail_server
      summary: List all mail_server
      tags:
      - mail_server
      - find
      - get
    post:
      operationId: CreateMailServer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewMailServer'
                  type: object
              type: object
        description: mail_server to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/MailServer'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: mail_server response
      summary: Create a new mail_server
      tags:
      - mail_server
      - create
  /api/mail_server/{referenceId}:
    delete:
      description: Delete a mail_server
      operationId: DeleteMailServer
      parameters:
      - description: Reference Id of the mail_server
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete mail_server by reference id
      summary: Delete mail_server
      tags:
      - mail_server
      - delete
    get:
      description: Get mail_server by id
      operationId: GetMailServerByReferenceId
      parameters:
      - description: Reference Id of the mail_server
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailServer'
          description: get mail_server by reference id
      summary: Get mail_server by id
      tags:
      - mail_server
    patch:
      description: Edit an existing mail_server
      operationId: UpdateMailServer
      parameters:
      - description: Reference Id of the mail_server
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/MailServer'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/MailServer'
                      id:
                        type: string
                      relationships:
                        properties:
                          mail_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated mail_server
      summary: Delete related mail_account_id of mail_server
      tags:
      - mail_server_id
      - mail_account
      - mail_account_id
      - mail_server
      - belongs_to
      - delete
  /api/mail_server/{referenceId}/mail_account:
    delete:
      description: Remove a related mail_account_id from the mail_server_id
      operationId: DeleteMailAccountOfMailServer
      parameters:
      - description: Reference Id of the mail_server
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of mail_account
      tags:
      - mail_account
    get:
      description: Returns a list of Mail account
      operationId: RelatedMailAccountIdOfMailServer
      parameters:
      - description: Reference Id of the mail_server
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MailAccount'
                type: array
          description: list of all mail_account
      summary: Related MailAccountId of a MailServer
      tags:
      - mail_account
      - find
      - get
  /api/mail_server/{referenceId}/user_account:
    delete:
      description: Remove a related mail_server from the user_account_id
      operationId: DeleteUserAccountIdOfMailServer
      parameters:
      - description: Reference Id of the mail_server
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of mail_server
      tags:
      - user_account_id
      - mail_server
      - mail_server_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a mail_server
      operationId: GetUserAccountIdOfMailServerId
      parameters:
      - description: Reference Id of the mail_server
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of mail_server
      tags:
      - user_account
      - find
      - get
  /api/mail_server/{referenceId}/usergroup:
    delete:
      description: Remove a related mail_server from the usergroup_id
      operationId: DeleteUsergroupIdOfMailServer
      parameters:
      - description: Reference Id of the mail_server
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of mail_server
      tags:
      - usergroup_id
      - mail_server
      - mail_server_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a mail_server
      operationId: GetUsergroupIdOfMailServerId
      parameters:
      - description: Reference Id of the mail_server
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of mail_server
      tags:
      - usergroup
      - find
      - get
  /api/oauth_connect:
    get:
      description: Returns a list of Oauth connect
      operationId: GetOauthConnect
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OauthConnect'
                type: array
          description: list of all oauth_connect
      summary: List all oauth_connect
      tags:
      - oauth_connect
      - find
      - get
    post:
      operationId: CreateOauthConnect
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewOauthConnect'
                  type: object
              type: object
        description: oauth_connect to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/OauthConnect'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: oauth_connect response
      summary: Create a new oauth_connect
      tags:
      - oauth_connect
      - create
  /api/oauth_connect/{referenceId}:
    delete:
      description: Delete a oauth_connect
      operationId: DeleteOauthConnect
      parameters:
      - description: Reference Id of the oauth_connect
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete oauth_connect by reference id
      summary: Delete oauth_connect
      tags:
      - oauth_connect
      - delete
    get:
      description: Get oauth_connect by id
      operationId: GetOauthConnectByReferenceId
      parameters:
      - description: Reference Id of the oauth_connect
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthConnect'
          description: get oauth_connect by reference id
      summary: Get oauth_connect by id
      tags:
      - oauth_connect
    patch:
      description: Edit an existing oauth_connect
      operationId: UpdateOauthConnect
      parameters:
      - description: Reference Id of the oauth_connect
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/OauthConnect'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/OauthConnect'
                      id:
                        type: string
                      relationships:
                        properties:
                          oauth_token_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated oauth_connect
      summary: Delete related oauth_token_id of oauth_connect
      tags:
      - oauth_connect_id
      - oauth_token
      - oauth_token_id
      - oauth_connect
      - has_one
      - delete
  /api/oauth_connect/{referenceId}/oauth_token:
    delete:
      description: Remove a related oauth_token_id from the oauth_connect_id
      operationId: DeleteOauthTokenOfOauthConnect
      parameters:
      - description: Reference Id of the oauth_connect
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of oauth_token
      tags:
      - oauth_token
    get:
      description: Returns a list of Oauth token
      operationId: RelatedOauthTokenIdOfOauthConnect
      parameters:
      - description: Reference Id of the oauth_connect
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OauthToken'
                type: array
          description: list of all oauth_token
      summary: Related OauthTokenId of a OauthConnect
      tags:
      - oauth_token
      - find
      - get
  /api/oauth_connect/{referenceId}/user_account:
    delete:
      description: Remove a related oauth_connect from the user_account_id
      operationId: DeleteUserAccountIdOfOauthConnect
      parameters:
      - description: Reference Id of the oauth_connect
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of oauth_connect
      tags:
      - user_account_id
      - oauth_connect
      - oauth_connect_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a oauth_connect
      operationId: GetUserAccountIdOfOauthConnectId
      parameters:
      - description: Reference Id of the oauth_connect
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of oauth_connect
      tags:
      - user_account
      - find
      - get
  /api/oauth_connect/{referenceId}/usergroup:
    delete:
      description: Remove a related oauth_connect from the usergroup_id
      operationId: DeleteUsergroupIdOfOauthConnect
      parameters:
      - description: Reference Id of the oauth_connect
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of oauth_connect
      tags:
      - usergroup_id
      - oauth_connect
      - oauth_connect_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a oauth_connect
      operationId: GetUsergroupIdOfOauthConnectId
      parameters:
      - description: Reference Id of the oauth_connect
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of oauth_connect
      tags:
      - usergroup
      - find
      - get
  /api/oauth_token:
    get:
      description: Returns a list of Oauth token
      operationId: GetOauthToken
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OauthToken'
                type: array
          description: list of all oauth_token
      summary: List all oauth_token
      tags:
      - oauth_token
      - find
      - get
    post:
      operationId: CreateOauthToken
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewOauthToken'
                  type: object
              type: object
        description: oauth_token to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/OauthToken'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: oauth_token response
      summary: Create a new oauth_token
      tags:
      - oauth_token
      - create
  /api/oauth_token/{referenceId}:
    delete:
      description: Delete a oauth_token
      operationId: DeleteOauthToken
      parameters:
      - description: Reference Id of the oauth_token
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete oauth_token by reference id
      summary: Delete oauth_token
      tags:
      - oauth_token
      - delete
    get:
      description: Get oauth_token by id
      operationId: GetOauthTokenByReferenceId
      parameters:
      - description: Reference Id of the oauth_token
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthToken'
          description: get oauth_token by reference id
      summary: Get oauth_token by id
      tags:
      - oauth_token
    patch:
      description: Edit an existing oauth_token
      operationId: UpdateOauthToken
      parameters:
      - description: Reference Id of the oauth_token
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/OauthToken'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/OauthToken'
                      id:
                        type: string
                      relationships:
                        properties:
                          cloud_store_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          data_exchange_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          oauth_connect_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated oauth_token
      summary: Delete related data_exchange_id of oauth_token
      tags:
      - oauth_token_id
      - data_exchange
      - data_exchange_id
      - oauth_token
      - has_one
      - delete
  /api/oauth_token/{referenceId}/cloud_store:
    delete:
      description: Remove a related cloud_store_id from the oauth_token_id
      operationId: DeleteCloudStoreOfOauthToken
      parameters:
      - description: Reference Id of the oauth_token
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of cloud_store
      tags:
      - cloud_store
    get:
      description: Returns a list of Cloud store
      operationId: RelatedCloudStoreIdOfOauthToken
      parameters:
      - description: Reference Id of the oauth_token
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CloudStore'
                type: array
          description: list of all cloud_store
      summary: Related CloudStoreId of a OauthToken
      tags:
      - cloud_store
      - find
      - get
  /api/oauth_token/{referenceId}/data_exchange:
    delete:
      description: Remove a related data_exchange_id from the oauth_token_id
      operationId: DeleteDataExchangeOfOauthToken
      parameters:
      - description: Reference Id of the oauth_token
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of data_exchange
      tags:
      - data_exchange
    get:
      description: Returns a list of Data exchange
      operationId: RelatedDataExchangeIdOfOauthToken
      parameters:
      - description: Reference Id of the oauth_token
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataExchange'
                type: array
          description: list of all data_exchange
      summary: Related DataExchangeId of a OauthToken
      tags:
      - data_exchange
      - find
      - get
  /api/oauth_token/{referenceId}/oauth_connect:
    delete:
      description: Remove a related oauth_token from the oauth_connect_id
      operationId: DeleteOauthConnectIdOfOauthToken
      parameters:
      - description: Reference Id of the oauth_token
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of oauth_connect
      summary: Delete related oauth_connect_id of oauth_token
      tags:
      - oauth_connect_id
      - oauth_token
      - oauth_token_id
      - oauth_connect
      - has_one
      - delete
    get:
      description: Returns a list of all Oauth connect related to a oauth_token
      operationId: GetOauthConnectIdOfOauthTokenId
      parameters:
      - description: Reference Id of the oauth_token
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OauthConnect'
                type: array
          description: list of all oauth_connect
      summary: Fetch related oauth_connect_id of oauth_token
      tags:
      - oauth_connect
      - find
      - get
  /api/oauth_token/{referenceId}/user_account:
    delete:
      description: Remove a related oauth_token from the user_account_id
      operationId: DeleteUserAccountIdOfOauthToken
      parameters:
      - description: Reference Id of the oauth_token
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of oauth_token
      tags:
      - user_account_id
      - oauth_token
      - oauth_token_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a oauth_token
      operationId: GetUserAccountIdOfOauthTokenId
      parameters:
      - description: Reference Id of the oauth_token
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of oauth_token
      tags:
      - user_account
      - find
      - get
  /api/oauth_token/{referenceId}/usergroup:
    delete:
      description: Remove a related oauth_token from the usergroup_id
      operationId: DeleteUsergroupIdOfOauthToken
      parameters:
      - description: Reference Id of the oauth_token
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of oauth_token
      tags:
      - usergroup_id
      - oauth_token
      - oauth_token_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a oauth_token
      operationId: GetUsergroupIdOfOauthTokenId
      parameters:
      - description: Reference Id of the oauth_token
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of oauth_token
      tags:
      - usergroup
      - find
      - get
  /api/outbox:
    get:
      description: Returns a list of Outbox
      operationId: GetOutbox
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Outbox'
                type: array
          description: list of all outbox
      summary: List all outbox
      tags:
      - outbox
      - find
      - get
    post:
      operationId: CreateOutbox
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewOutbox'
                  type: object
              type: object
        description: outbox to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Outbox'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: outbox response
      summary: Create a new outbox
      tags:
      - outbox
      - create
  /api/outbox/{referenceId}:
    delete:
      description: Delete a outbox
      operationId: DeleteOutbox
      parameters:
      - description: Reference Id of the outbox
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete outbox by reference id
      summary: Delete outbox
      tags:
      - outbox
      - delete
    get:
      description: Get outbox by id
      operationId: GetOutboxByReferenceId
      parameters:
      - description: Reference Id of the outbox
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outbox'
          description: get outbox by reference id
      summary: Get outbox by id
      tags:
      - outbox
    patch:
      description: Edit an existing outbox
      operationId: UpdateOutbox
      parameters:
      - description: Reference Id of the outbox
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/Outbox'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Outbox'
                      id:
                        type: string
                      relationships:
                        properties:
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated outbox
      summary: Update existing outbox
      tags:
      - outbox
  /api/outbox/{referenceId}/user_account:
    delete:
      description: Remove a related outbox from the user_account_id
      operationId: DeleteUserAccountIdOfOutbox
      parameters:
      - description: Reference Id of the outbox
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of outbox
      tags:
      - user_account_id
      - outbox
      - outbox_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a outbox
      operationId: GetUserAccountIdOfOutboxId
      parameters:
      - description: Reference Id of the outbox
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of outbox
      tags:
      - user_account
      - find
      - get
  /api/outbox/{referenceId}/usergroup:
    delete:
      description: Remove a related outbox from the usergroup_id
      operationId: DeleteUsergroupIdOfOutbox
      parameters:
      - description: Reference Id of the outbox
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of outbox
      tags:
      - usergroup_id
      - outbox
      - outbox_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a outbox
      operationId: GetUsergroupIdOfOutboxId
      parameters:
      - description: Reference Id of the outbox
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of outbox
      tags:
      - usergroup
      - find
      - get
  /api/site:
    get:
      description: Returns a list of Site
      operationId: GetSite
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Site'
                type: array
          description: list of all site
      summary: List all site
      tags:
      - site
      - find
      - get
    post:
      operationId: CreateSite
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewSite'
                  type: object
              type: object
        description: site to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Site'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: site response
      summary: Create a new site
      tags:
      - site
      - create
  /api/site/{referenceId}:
    delete:
      description: Delete a site
      operationId: DeleteSite
      parameters:
      - description: Reference Id of the site
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete site by reference id
      summary: Delete site
      tags:
      - site
      - delete
    get:
      description: Get site by id
      operationId: GetSiteByReferenceId
      parameters:
      - description: Reference Id of the site
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: get site by reference id
      summary: Get site by id
      tags:
      - site
    patch:
      description: Edit an existing site
      operationId: UpdateSite
      parameters:
      - description: Reference Id of the site
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/Site'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Site'
                      id:
                        type: string
                      relationships:
                        properties:
                          cloud_store_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated site
      summary: Update existing site
      tags:
      - site
  /api/site/{referenceId}/cloud_store:
    delete:
      description: Remove a related site from the cloud_store_id
      operationId: DeleteCloudStoreIdOfSite
      parameters:
      - description: Reference Id of the site
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of cloud_store
      summary: Delete related cloud_store_id of site
      tags:
      - cloud_store_id
      - site
      - site_id
      - cloud_store
      - has_one
      - delete
    get:
      description: Returns a list of all Cloud store related to a site
      operationId: GetCloudStoreIdOfSiteId
      parameters:
      - description: Reference Id of the site
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CloudStore'
                type: array
          description: list of all cloud_store
      summary: Fetch related cloud_store_id of site
      tags:
      - cloud_store
      - find
      - get
  /api/site/{referenceId}/user_account:
    delete:
      description: Remove a related site from the user_account_id
      operationId: DeleteUserAccountIdOfSite
      parameters:
      - description: Reference Id of the site
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of site
      tags:
      - user_account_id
      - site
      - site_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a site
      operationId: GetUserAccountIdOfSiteId
      parameters:
      - description: Reference Id of the site
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of site
      tags:
      - user_account
      - find
      - get
  /api/site/{referenceId}/usergroup:
    delete:
      description: Remove a related site from the usergroup_id
      operationId: DeleteUsergroupIdOfSite
      parameters:
      - description: Reference Id of the site
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of site
      tags:
      - usergroup_id
      - site
      - site_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a site
      operationId: GetUsergroupIdOfSiteId
      parameters:
      - description: Reference Id of the site
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of site
      tags:
      - usergroup
      - find
      - get
  /api/smd:
    get:
      description: Returns a list of Smd
      operationId: GetSmd
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Smd'
                type: array
          description: list of all smd
      summary: List all smd
      tags:
      - smd
      - find
      - get
    post:
      operationId: CreateSmd
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewSmd'
                  type: object
              type: object
        description: smd to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Smd'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: smd response
      summary: Create a new smd
      tags:
      - smd
      - create
  /api/smd/{referenceId}:
    delete:
      description: Delete a smd
      operationId: DeleteSmd
      parameters:
      - description: Reference Id of the smd
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete smd by reference id
      summary: Delete smd
      tags:
      - smd
      - delete
    get:
      description: Get smd by id
      operationId: GetSmdByReferenceId
      parameters:
      - description: Reference Id of the smd
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Smd'
          description: get smd by reference id
      summary: Get smd by id
      tags:
      - smd
    patch:
      description: Edit an existing smd
      operationId: UpdateSmd
      parameters:
      - description: Reference Id of the smd
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/Smd'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Smd'
                      id:
                        type: string
                      relationships:
                        properties:
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          world_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated smd
      summary: Delete related world_id of smd
      tags:
      - smd_id
      - world
      - world_id
      - smd
      - has_many
      - delete
  /api/smd/{referenceId}/user_account:
    delete:
      description: Remove a related smd from the user_account_id
      operationId: DeleteUserAccountIdOfSmd
      parameters:
      - description: Reference Id of the smd
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of smd
      tags:
      - user_account_id
      - smd
      - smd_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a smd
      operationId: GetUserAccountIdOfSmdId
      parameters:
      - description: Reference Id of the smd
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of smd
      tags:
      - user_account
      - find
      - get
  /api/smd/{referenceId}/usergroup:
    delete:
      description: Remove a related smd from the usergroup_id
      operationId: DeleteUsergroupIdOfSmd
      parameters:
      - description: Reference Id of the smd
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of smd
      tags:
      - usergroup_id
      - smd
      - smd_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a smd
      operationId: GetUsergroupIdOfSmdId
      parameters:
      - description: Reference Id of the smd
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of smd
      tags:
      - usergroup
      - find
      - get
  /api/smd/{referenceId}/world:
    delete:
      description: Remove a related world_id from the smd_id
      operationId: DeleteWorldOfSmd
      parameters:
      - description: Reference Id of the smd
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of world
      tags:
      - world
    get:
      description: Returns a list of World
      operationId: RelatedWorldIdOfSmd
      parameters:
      - description: Reference Id of the smd
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/World'
                type: array
          description: list of all world
      summary: Related WorldId of a Smd
      tags:
      - world
      - find
      - get
  /api/stream:
    get:
      description: Returns a list of Stream
      operationId: GetStream
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Stream'
                type: array
          description: list of all stream
      summary: List all stream
      tags:
      - stream
      - find
      - get
    post:
      operationId: CreateStream
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewStream'
                  type: object
              type: object
        description: stream to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Stream'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: stream response
      summary: Create a new stream
      tags:
      - stream
      - create
  /api/stream/{referenceId}:
    delete:
      description: Delete a stream
      operationId: DeleteStream
      parameters:
      - description: Reference Id of the stream
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete stream by reference id
      summary: Delete stream
      tags:
      - stream
      - delete
    get:
      description: Get stream by id
      operationId: GetStreamByReferenceId
      parameters:
      - description: Reference Id of the stream
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
          description: get stream by reference id
      summary: Get stream by id
      tags:
      - stream
    patch:
      description: Edit an existing stream
      operationId: UpdateStream
      parameters:
      - description: Reference Id of the stream
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/Stream'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Stream'
                      id:
                        type: string
                      relationships:
                        properties:
                          feed_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated stream
      summary: Delete related feed_id of stream
      tags:
      - stream_id
      - feed
      - feed_id
      - stream
      - belongs_to
      - delete
  /api/stream/{referenceId}/feed:
    delete:
      description: Remove a related feed_id from the stream_id
      operationId: DeleteFeedOfStream
      parameters:
      - description: Reference Id of the stream
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of feed
      tags:
      - feed
    get:
      description: Returns a list of Feed
      operationId: RelatedFeedIdOfStream
      parameters:
      - description: Reference Id of the stream
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feed'
                type: array
          description: list of all feed
      summary: Related FeedId of a Stream
      tags:
      - feed
      - find
      - get
  /api/stream/{referenceId}/user_account:
    delete:
      description: Remove a related stream from the user_account_id
      operationId: DeleteUserAccountIdOfStream
      parameters:
      - description: Reference Id of the stream
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of stream
      tags:
      - user_account_id
      - stream
      - stream_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a stream
      operationId: GetUserAccountIdOfStreamId
      parameters:
      - description: Reference Id of the stream
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of stream
      tags:
      - user_account
      - find
      - get
  /api/stream/{referenceId}/usergroup:
    delete:
      description: Remove a related stream from the usergroup_id
      operationId: DeleteUsergroupIdOfStream
      parameters:
      - description: Reference Id of the stream
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of stream
      tags:
      - usergroup_id
      - stream
      - stream_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a stream
      operationId: GetUsergroupIdOfStreamId
      parameters:
      - description: Reference Id of the stream
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of stream
      tags:
      - usergroup
      - find
      - get
  /api/task:
    get:
      description: Returns a list of Task
      operationId: GetTask
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Task'
                type: array
          description: list of all task
      summary: List all task
      tags:
      - task
      - find
      - get
    post:
      operationId: CreateTask
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewTask'
                  type: object
              type: object
        description: task to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Task'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: task response
      summary: Create a new task
      tags:
      - task
      - create
  /api/task/{referenceId}:
    delete:
      description: Delete a task
      operationId: DeleteTask
      parameters:
      - description: Reference Id of the task
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete task by reference id
      summary: Delete task
      tags:
      - task
      - delete
    get:
      description: Get task by id
      operationId: GetTaskByReferenceId
      parameters:
      - description: Reference Id of the task
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: get task by reference id
      summary: Get task by id
      tags:
      - task
    patch:
      description: Edit an existing task
      operationId: UpdateTask
      parameters:
      - description: Reference Id of the task
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/Task'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Task'
                      id:
                        type: string
                      relationships:
                        properties:
                          as_user_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated task
      summary: Update existing task
      tags:
      - task
  /api/task/{referenceId}/user_account:
    delete:
      description: Remove a related task from the as_user_id
      operationId: DeleteAsUserIdOfTask
      parameters:
      - description: Reference Id of the task
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related as_user_id of task
      tags:
      - as_user_id
      - task
      - task_executed
      - user_account
      - has_one
      - delete
    get:
      description: Returns a list of all User account related to a task
      operationId: GetAsUserIdOfTaskExecuted
      parameters:
      - description: Reference Id of the task
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related as_user_id of task
      tags:
      - user_account
      - find
      - get
  /api/task/{referenceId}/usergroup:
    delete:
      description: Remove a related task from the usergroup_id
      operationId: DeleteUsergroupIdOfTask
      parameters:
      - description: Reference Id of the task
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of task
      tags:
      - usergroup_id
      - task
      - task_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a task
      operationId: GetUsergroupIdOfTaskId
      parameters:
      - description: Reference Id of the task
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of task
      tags:
      - usergroup
      - find
      - get
  /api/timeline:
    get:
      description: Returns a list of Timeline
      operationId: GetTimeline
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Timeline'
                type: array
          description: list of all timeline
      summary: List all timeline
      tags:
      - timeline
      - find
      - get
    post:
      operationId: CreateTimeline
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewTimeline'
                  type: object
              type: object
        description: timeline to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Timeline'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: timeline response
      summary: Create a new timeline
      tags:
      - timeline
      - create
  /api/timeline/{referenceId}:
    delete:
      description: Delete a timeline
      operationId: DeleteTimeline
      parameters:
      - description: Reference Id of the timeline
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete timeline by reference id
      summary: Delete timeline
      tags:
      - timeline
      - delete
    get:
      description: Get timeline by id
      operationId: GetTimelineByReferenceId
      parameters:
      - description: Reference Id of the timeline
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeline'
          description: get timeline by reference id
      summary: Get timeline by id
      tags:
      - timeline
    patch:
      description: Edit an existing timeline
      operationId: UpdateTimeline
      parameters:
      - description: Reference Id of the timeline
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/Timeline'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Timeline'
                      id:
                        type: string
                      relationships:
                        properties:
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          world_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated timeline
      summary: Update existing timeline
      tags:
      - timeline
  /api/timeline/{referenceId}/user_account:
    delete:
      description: Remove a related timeline from the user_account_id
      operationId: DeleteUserAccountIdOfTimeline
      parameters:
      - description: Reference Id of the timeline
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of timeline
      tags:
      - user_account_id
      - timeline
      - timeline_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a timeline
      operationId: GetUserAccountIdOfTimelineId
      parameters:
      - description: Reference Id of the timeline
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of timeline
      tags:
      - user_account
      - find
      - get
  /api/timeline/{referenceId}/usergroup:
    delete:
      description: Remove a related timeline from the usergroup_id
      operationId: DeleteUsergroupIdOfTimeline
      parameters:
      - description: Reference Id of the timeline
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of timeline
      tags:
      - usergroup_id
      - timeline
      - timeline_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a timeline
      operationId: GetUsergroupIdOfTimelineId
      parameters:
      - description: Reference Id of the timeline
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of timeline
      tags:
      - usergroup
      - find
      - get
  /api/timeline/{referenceId}/world:
    delete:
      description: Remove a related timeline from the world_id
      operationId: DeleteWorldIdOfTimeline
      parameters:
      - description: Reference Id of the timeline
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of world
      summary: Delete related world_id of timeline
      tags:
      - world_id
      - timeline
      - timeline_id
      - world
      - belongs_to
      - delete
    get:
      description: Returns a list of all World related to a timeline
      operationId: GetWorldIdOfTimelineId
      parameters:
      - description: Reference Id of the timeline
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/World'
                type: array
          description: list of all world
      summary: Fetch related world_id of timeline
      tags:
      - world
      - find
      - get
  /api/user_account:
    get:
      description: Returns a list of User account
      operationId: GetUserAccount
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: List all user_account
      tags:
      - user_account
      - find
      - get
    post:
      operationId: CreateUserAccount
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewUserAccount'
                  type: object
              type: object
        description: user_account to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/UserAccount'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: user_account response
      summary: Create a new user_account
      tags:
      - user_account
      - create
  /api/user_account/{referenceId}:
    delete:
      description: Delete a user_account
      operationId: DeleteUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete user_account by reference id
      summary: Delete user_account
      tags:
      - user_account
      - delete
    get:
      description: Get user_account by id
      operationId: GetUserAccountByReferenceId
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: get user_account by reference id
      summary: Get user_account by id
      tags:
      - user_account
    patch:
      description: Edit an existing user_account
      operationId: UpdateUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserAccount'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserAccount'
                      id:
                        type: string
                      relationships:
                        properties:
                          action_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          certificate_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          cloud_store_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          data_exchange_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          feed_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          integration_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          json_schema_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          mail_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          mail_box_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          mail_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          mail_server_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          oauth_connect_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          oauth_token_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          outbox_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          primary_user_otp:
                            $ref: '#/components/schemas/IncludedRelationship'
                          site_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          smd_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          stream_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          task_executed:
                            $ref: '#/components/schemas/IncludedRelationship'
                          task_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          timeline_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_otp_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          world_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated user_account
      summary: Delete related action_id of user_account
      tags:
      - user_account_id
      - action
      - action_id
      - user_account
      - belongs_to
      - delete
  /api/user_account/{referenceId}/action:
    delete:
      description: Remove a related action_id from the user_account_id
      operationId: DeleteActionOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of action
      tags:
      - action
    get:
      description: Returns a list of Action
      operationId: RelatedActionIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Action'
                type: array
          description: list of all action
      summary: Related ActionId of a UserAccount
      tags:
      - action
      - find
      - get
  /api/user_account/{referenceId}/certificate:
    delete:
      description: Remove a related certificate_id from the user_account_id
      operationId: DeleteCertificateOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of certificate
      tags:
      - certificate
    get:
      description: Returns a list of Certificate
      operationId: RelatedCertificateIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Certificate'
                type: array
          description: list of all certificate
      summary: Related CertificateId of a UserAccount
      tags:
      - certificate
      - find
      - get
  /api/user_account/{referenceId}/cloud_store:
    delete:
      description: Remove a related cloud_store_id from the user_account_id
      operationId: DeleteCloudStoreOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of cloud_store
      tags:
      - cloud_store
    get:
      description: Returns a list of Cloud store
      operationId: RelatedCloudStoreIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CloudStore'
                type: array
          description: list of all cloud_store
      summary: Related CloudStoreId of a UserAccount
      tags:
      - cloud_store
      - find
      - get
  /api/user_account/{referenceId}/data_exchange:
    delete:
      description: Remove a related data_exchange_id from the user_account_id
      operationId: DeleteDataExchangeOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of data_exchange
      tags:
      - data_exchange
    get:
      description: Returns a list of Data exchange
      operationId: RelatedDataExchangeIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataExchange'
                type: array
          description: list of all data_exchange
      summary: Related DataExchangeId of a UserAccount
      tags:
      - data_exchange
      - find
      - get
  /api/user_account/{referenceId}/feed:
    delete:
      description: Remove a related feed_id from the user_account_id
      operationId: DeleteFeedOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of feed
      tags:
      - feed
    get:
      description: Returns a list of Feed
      operationId: RelatedFeedIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feed'
                type: array
          description: list of all feed
      summary: Related FeedId of a UserAccount
      tags:
      - feed
      - find
      - get
  /api/user_account/{referenceId}/integration:
    delete:
      description: Remove a related integration_id from the user_account_id
      operationId: DeleteIntegrationOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of integration
      tags:
      - integration
    get:
      description: Returns a list of Integration
      operationId: RelatedIntegrationIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Integration'
                type: array
          description: list of all integration
      summary: Related IntegrationId of a UserAccount
      tags:
      - integration
      - find
      - get
  /api/user_account/{referenceId}/json_schema:
    delete:
      description: Remove a related json_schema_id from the user_account_id
      operationId: DeleteJsonSchemaOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of json_schema
      tags:
      - json_schema
    get:
      description: Returns a list of Json schema
      operationId: RelatedJsonSchemaIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JsonSchema'
                type: array
          description: list of all json_schema
      summary: Related JsonSchemaId of a UserAccount
      tags:
      - json_schema
      - find
      - get
  /api/user_account/{referenceId}/mail:
    delete:
      description: Remove a related mail_id from the user_account_id
      operationId: DeleteMailOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of mail
      tags:
      - mail
    get:
      description: Returns a list of Mail
      operationId: RelatedMailIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Mail'
                type: array
          description: list of all mail
      summary: Related MailId of a UserAccount
      tags:
      - mail
      - find
      - get
  /api/user_account/{referenceId}/mail_account:
    delete:
      description: Remove a related mail_account_id from the user_account_id
      operationId: DeleteMailAccountOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of mail_account
      tags:
      - mail_account
    get:
      description: Returns a list of Mail account
      operationId: RelatedMailAccountIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MailAccount'
                type: array
          description: list of all mail_account
      summary: Related MailAccountId of a UserAccount
      tags:
      - mail_account
      - find
      - get
  /api/user_account/{referenceId}/mail_box:
    delete:
      description: Remove a related mail_box_id from the user_account_id
      operationId: DeleteMailBoxOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of mail_box
      tags:
      - mail_box
    get:
      description: Returns a list of Mail box
      operationId: RelatedMailBoxIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MailBox'
                type: array
          description: list of all mail_box
      summary: Related MailBoxId of a UserAccount
      tags:
      - mail_box
      - find
      - get
  /api/user_account/{referenceId}/mail_server:
    delete:
      description: Remove a related mail_server_id from the user_account_id
      operationId: DeleteMailServerOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of mail_server
      tags:
      - mail_server
    get:
      description: Returns a list of Mail server
      operationId: RelatedMailServerIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MailServer'
                type: array
          description: list of all mail_server
      summary: Related MailServerId of a UserAccount
      tags:
      - mail_server
      - find
      - get
  /api/user_account/{referenceId}/oauth_connect:
    delete:
      description: Remove a related oauth_connect_id from the user_account_id
      operationId: DeleteOauthConnectOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of oauth_connect
      tags:
      - oauth_connect
    get:
      description: Returns a list of Oauth connect
      operationId: RelatedOauthConnectIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OauthConnect'
                type: array
          description: list of all oauth_connect
      summary: Related OauthConnectId of a UserAccount
      tags:
      - oauth_connect
      - find
      - get
  /api/user_account/{referenceId}/oauth_token:
    delete:
      description: Remove a related oauth_token_id from the user_account_id
      operationId: DeleteOauthTokenOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of oauth_token
      tags:
      - oauth_token
    get:
      description: Returns a list of Oauth token
      operationId: RelatedOauthTokenIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OauthToken'
                type: array
          description: list of all oauth_token
      summary: Related OauthTokenId of a UserAccount
      tags:
      - oauth_token
      - find
      - get
  /api/user_account/{referenceId}/outbox:
    delete:
      description: Remove a related outbox_id from the user_account_id
      operationId: DeleteOutboxOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of outbox
      tags:
      - outbox
    get:
      description: Returns a list of Outbox
      operationId: RelatedOutboxIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Outbox'
                type: array
          description: list of all outbox
      summary: Related OutboxId of a UserAccount
      tags:
      - outbox
      - find
      - get
  /api/user_account/{referenceId}/site:
    delete:
      description: Remove a related site_id from the user_account_id
      operationId: DeleteSiteOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of site
      tags:
      - site
    get:
      description: Returns a list of Site
      operationId: RelatedSiteIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Site'
                type: array
          description: list of all site
      summary: Related SiteId of a UserAccount
      tags:
      - site
      - find
      - get
  /api/user_account/{referenceId}/smd:
    delete:
      description: Remove a related smd_id from the user_account_id
      operationId: DeleteSmdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of smd
      tags:
      - smd
    get:
      description: Returns a list of Smd
      operationId: RelatedSmdIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Smd'
                type: array
          description: list of all smd
      summary: Related SmdId of a UserAccount
      tags:
      - smd
      - find
      - get
  /api/user_account/{referenceId}/stream:
    delete:
      description: Remove a related stream_id from the user_account_id
      operationId: DeleteStreamOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of stream
      tags:
      - stream
    get:
      description: Returns a list of Stream
      operationId: RelatedStreamIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Stream'
                type: array
          description: list of all stream
      summary: Related StreamId of a UserAccount
      tags:
      - stream
      - find
      - get
  /api/user_account/{referenceId}/task:
    delete:
      description: Remove a related task_executed from the as_user_id
      operationId: DeleteTaskOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of task
      tags:
      - task
    get:
      description: Returns a list of Task
      operationId: RelatedTaskExecutedOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Task'
                type: array
          description: list of all task
      summary: Related TaskExecuted of a UserAccount
      tags:
      - task
      - find
      - get
  /api/user_account/{referenceId}/timeline:
    delete:
      description: Remove a related timeline_id from the user_account_id
      operationId: DeleteTimelineOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of timeline
      tags:
      - timeline
    get:
      description: Returns a list of Timeline
      operationId: RelatedTimelineIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Timeline'
                type: array
          description: list of all timeline
      summary: Related TimelineId of a UserAccount
      tags:
      - timeline
      - find
      - get
  /api/user_account/{referenceId}/user_account:
    delete:
      description: Remove a related user_account from the user_account_id
      operationId: DeleteUserAccountIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of user_account
      tags:
      - user_account_id
      - user_account
      - user_account_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a user_account
      operationId: GetUserAccountIdOfUserAccountId
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of user_account
      tags:
      - user_account
      - find
      - get
  /api/user_account/{referenceId}/user_otp_account:
    delete:
      description: Remove a related primary_user_otp from the otp_of_account
      operationId: DeleteUserOtpAccountOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_otp_account
      tags:
      - user_otp_account
    get:
      description: Returns a list of User otp account
      operationId: RelatedPrimaryUserOtpOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserOtpAccount'
                type: array
          description: list of all user_otp_account
      summary: Related PrimaryUserOtp of a UserAccount
      tags:
      - user_otp_account
      - find
      - get
  /api/user_account/{referenceId}/usergroup:
    delete:
      description: Remove a related user_account from the usergroup_id
      operationId: DeleteUsergroupIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of user_account
      tags:
      - usergroup_id
      - user_account
      - user_account_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a user_account
      operationId: GetUsergroupIdOfUserAccountId
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of user_account
      tags:
      - usergroup
      - find
      - get
  /api/user_account/{referenceId}/world:
    delete:
      description: Remove a related world_id from the user_account_id
      operationId: DeleteWorldOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of world
      tags:
      - world
    get:
      description: Returns a list of World
      operationId: RelatedWorldIdOfUserAccount
      parameters:
      - description: Reference Id of the user_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/World'
                type: array
          description: list of all world
      summary: Related WorldId of a UserAccount
      tags:
      - world
      - find
      - get
  /api/user_otp_account:
    get:
      description: Returns a list of User otp account
      operationId: GetUserOtpAccount
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserOtpAccount'
                type: array
          description: list of all user_otp_account
      summary: List all user_otp_account
      tags:
      - user_otp_account
      - find
      - get
    post:
      operationId: CreateUserOtpAccount
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewUserOtpAccount'
                  type: object
              type: object
        description: user_otp_account to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/UserOtpAccount'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: user_otp_account response
      summary: Create a new user_otp_account
      tags:
      - user_otp_account
      - create
  /api/user_otp_account/{referenceId}:
    delete:
      description: Delete a user_otp_account
      operationId: DeleteUserOtpAccount
      parameters:
      - description: Reference Id of the user_otp_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete user_otp_account by reference id
      summary: Delete user_otp_account
      tags:
      - user_otp_account
      - delete
    get:
      description: Get user_otp_account by id
      operationId: GetUserOtpAccountByReferenceId
      parameters:
      - description: Reference Id of the user_otp_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOtpAccount'
          description: get user_otp_account by reference id
      summary: Get user_otp_account by id
      tags:
      - user_otp_account
    patch:
      description: Edit an existing user_otp_account
      operationId: UpdateUserOtpAccount
      parameters:
      - description: Reference Id of the user_otp_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/UserOtpAccount'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/UserOtpAccount'
                      id:
                        type: string
                      relationships:
                        properties:
                          otp_of_account:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated user_otp_account
      summary: Update existing user_otp_account
      tags:
      - user_otp_account
  /api/user_otp_account/{referenceId}/user_account:
    delete:
      description: Remove a related user_otp_account from the otp_of_account
      operationId: DeleteOtpOfAccountOfUserOtpAccount
      parameters:
      - description: Reference Id of the user_otp_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related otp_of_account of user_otp_account
      tags:
      - otp_of_account
      - user_otp_account
      - primary_user_otp
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a user_otp_account
      operationId: GetOtpOfAccountOfPrimaryUserOtp
      parameters:
      - description: Reference Id of the user_otp_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related otp_of_account of user_otp_account
      tags:
      - user_account
      - find
      - get
  /api/user_otp_account/{referenceId}/usergroup:
    delete:
      description: Remove a related user_otp_account from the usergroup_id
      operationId: DeleteUsergroupIdOfUserOtpAccount
      parameters:
      - description: Reference Id of the user_otp_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of user_otp_account
      tags:
      - usergroup_id
      - user_otp_account
      - user_otp_account_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a user_otp_account
      operationId: GetUsergroupIdOfUserOtpAccountId
      parameters:
      - description: Reference Id of the user_otp_account
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of user_otp_account
      tags:
      - usergroup
      - find
      - get
  /api/usergroup:
    get:
      description: Returns a list of Usergroup
      operationId: GetUsergroup
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: List all usergroup
      tags:
      - usergroup
      - find
      - get
    post:
      operationId: CreateUsergroup
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewUsergroup'
                  type: object
              type: object
        description: usergroup to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Usergroup'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: usergroup response
      summary: Create a new usergroup
      tags:
      - usergroup
      - create
  /api/usergroup/{referenceId}:
    delete:
      description: Delete a usergroup
      operationId: DeleteUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete usergroup by reference id
      summary: Delete usergroup
      tags:
      - usergroup
      - delete
    get:
      description: Get usergroup by id
      operationId: GetUsergroupByReferenceId
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usergroup'
          description: get usergroup by reference id
      summary: Get usergroup by id
      tags:
      - usergroup
    patch:
      description: Edit an existing usergroup
      operationId: UpdateUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/Usergroup'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/Usergroup'
                      id:
                        type: string
                      relationships:
                        properties:
                          action_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          certificate_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          cloud_store_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          data_exchange_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          feed_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          integration_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          json_schema_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          mail_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          mail_box_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          mail_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          mail_server_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          oauth_connect_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          oauth_token_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          outbox_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          site_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          smd_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          stream_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          task_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          timeline_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_otp_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          world_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated usergroup
      summary: Delete related action_id of usergroup
      tags:
      - usergroup_id
      - action
      - action_id
      - usergroup
      - has_many
      - delete
  /api/usergroup/{referenceId}/action:
    delete:
      description: Remove a related action_id from the usergroup_id
      operationId: DeleteActionOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of action
      tags:
      - action
    get:
      description: Returns a list of Action
      operationId: RelatedActionIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Action'
                type: array
          description: list of all action
      summary: Related ActionId of a Usergroup
      tags:
      - action
      - find
      - get
  /api/usergroup/{referenceId}/certificate:
    delete:
      description: Remove a related certificate_id from the usergroup_id
      operationId: DeleteCertificateOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of certificate
      tags:
      - certificate
    get:
      description: Returns a list of Certificate
      operationId: RelatedCertificateIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Certificate'
                type: array
          description: list of all certificate
      summary: Related CertificateId of a Usergroup
      tags:
      - certificate
      - find
      - get
  /api/usergroup/{referenceId}/cloud_store:
    delete:
      description: Remove a related cloud_store_id from the usergroup_id
      operationId: DeleteCloudStoreOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of cloud_store
      tags:
      - cloud_store
    get:
      description: Returns a list of Cloud store
      operationId: RelatedCloudStoreIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CloudStore'
                type: array
          description: list of all cloud_store
      summary: Related CloudStoreId of a Usergroup
      tags:
      - cloud_store
      - find
      - get
  /api/usergroup/{referenceId}/data_exchange:
    delete:
      description: Remove a related data_exchange_id from the usergroup_id
      operationId: DeleteDataExchangeOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of data_exchange
      tags:
      - data_exchange
    get:
      description: Returns a list of Data exchange
      operationId: RelatedDataExchangeIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataExchange'
                type: array
          description: list of all data_exchange
      summary: Related DataExchangeId of a Usergroup
      tags:
      - data_exchange
      - find
      - get
  /api/usergroup/{referenceId}/feed:
    delete:
      description: Remove a related feed_id from the usergroup_id
      operationId: DeleteFeedOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of feed
      tags:
      - feed
    get:
      description: Returns a list of Feed
      operationId: RelatedFeedIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feed'
                type: array
          description: list of all feed
      summary: Related FeedId of a Usergroup
      tags:
      - feed
      - find
      - get
  /api/usergroup/{referenceId}/integration:
    delete:
      description: Remove a related integration_id from the usergroup_id
      operationId: DeleteIntegrationOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of integration
      tags:
      - integration
    get:
      description: Returns a list of Integration
      operationId: RelatedIntegrationIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Integration'
                type: array
          description: list of all integration
      summary: Related IntegrationId of a Usergroup
      tags:
      - integration
      - find
      - get
  /api/usergroup/{referenceId}/json_schema:
    delete:
      description: Remove a related json_schema_id from the usergroup_id
      operationId: DeleteJsonSchemaOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of json_schema
      tags:
      - json_schema
    get:
      description: Returns a list of Json schema
      operationId: RelatedJsonSchemaIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JsonSchema'
                type: array
          description: list of all json_schema
      summary: Related JsonSchemaId of a Usergroup
      tags:
      - json_schema
      - find
      - get
  /api/usergroup/{referenceId}/mail:
    delete:
      description: Remove a related mail_id from the usergroup_id
      operationId: DeleteMailOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of mail
      tags:
      - mail
    get:
      description: Returns a list of Mail
      operationId: RelatedMailIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Mail'
                type: array
          description: list of all mail
      summary: Related MailId of a Usergroup
      tags:
      - mail
      - find
      - get
  /api/usergroup/{referenceId}/mail_account:
    delete:
      description: Remove a related mail_account_id from the usergroup_id
      operationId: DeleteMailAccountOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of mail_account
      tags:
      - mail_account
    get:
      description: Returns a list of Mail account
      operationId: RelatedMailAccountIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MailAccount'
                type: array
          description: list of all mail_account
      summary: Related MailAccountId of a Usergroup
      tags:
      - mail_account
      - find
      - get
  /api/usergroup/{referenceId}/mail_box:
    delete:
      description: Remove a related mail_box_id from the usergroup_id
      operationId: DeleteMailBoxOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of mail_box
      tags:
      - mail_box
    get:
      description: Returns a list of Mail box
      operationId: RelatedMailBoxIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MailBox'
                type: array
          description: list of all mail_box
      summary: Related MailBoxId of a Usergroup
      tags:
      - mail_box
      - find
      - get
  /api/usergroup/{referenceId}/mail_server:
    delete:
      description: Remove a related mail_server_id from the usergroup_id
      operationId: DeleteMailServerOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of mail_server
      tags:
      - mail_server
    get:
      description: Returns a list of Mail server
      operationId: RelatedMailServerIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MailServer'
                type: array
          description: list of all mail_server
      summary: Related MailServerId of a Usergroup
      tags:
      - mail_server
      - find
      - get
  /api/usergroup/{referenceId}/oauth_connect:
    delete:
      description: Remove a related oauth_connect_id from the usergroup_id
      operationId: DeleteOauthConnectOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of oauth_connect
      tags:
      - oauth_connect
    get:
      description: Returns a list of Oauth connect
      operationId: RelatedOauthConnectIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OauthConnect'
                type: array
          description: list of all oauth_connect
      summary: Related OauthConnectId of a Usergroup
      tags:
      - oauth_connect
      - find
      - get
  /api/usergroup/{referenceId}/oauth_token:
    delete:
      description: Remove a related oauth_token_id from the usergroup_id
      operationId: DeleteOauthTokenOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of oauth_token
      tags:
      - oauth_token
    get:
      description: Returns a list of Oauth token
      operationId: RelatedOauthTokenIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OauthToken'
                type: array
          description: list of all oauth_token
      summary: Related OauthTokenId of a Usergroup
      tags:
      - oauth_token
      - find
      - get
  /api/usergroup/{referenceId}/outbox:
    delete:
      description: Remove a related outbox_id from the usergroup_id
      operationId: DeleteOutboxOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of outbox
      tags:
      - outbox
    get:
      description: Returns a list of Outbox
      operationId: RelatedOutboxIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Outbox'
                type: array
          description: list of all outbox
      summary: Related OutboxId of a Usergroup
      tags:
      - outbox
      - find
      - get
  /api/usergroup/{referenceId}/site:
    delete:
      description: Remove a related site_id from the usergroup_id
      operationId: DeleteSiteOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of site
      tags:
      - site
    get:
      description: Returns a list of Site
      operationId: RelatedSiteIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Site'
                type: array
          description: list of all site
      summary: Related SiteId of a Usergroup
      tags:
      - site
      - find
      - get
  /api/usergroup/{referenceId}/smd:
    delete:
      description: Remove a related smd_id from the usergroup_id
      operationId: DeleteSmdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of smd
      tags:
      - smd
    get:
      description: Returns a list of Smd
      operationId: RelatedSmdIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Smd'
                type: array
          description: list of all smd
      summary: Related SmdId of a Usergroup
      tags:
      - smd
      - find
      - get
  /api/usergroup/{referenceId}/stream:
    delete:
      description: Remove a related stream_id from the usergroup_id
      operationId: DeleteStreamOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of stream
      tags:
      - stream
    get:
      description: Returns a list of Stream
      operationId: RelatedStreamIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Stream'
                type: array
          description: list of all stream
      summary: Related StreamId of a Usergroup
      tags:
      - stream
      - find
      - get
  /api/usergroup/{referenceId}/task:
    delete:
      description: Remove a related task_id from the usergroup_id
      operationId: DeleteTaskOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of task
      tags:
      - task
    get:
      description: Returns a list of Task
      operationId: RelatedTaskIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Task'
                type: array
          description: list of all task
      summary: Related TaskId of a Usergroup
      tags:
      - task
      - find
      - get
  /api/usergroup/{referenceId}/timeline:
    delete:
      description: Remove a related timeline_id from the usergroup_id
      operationId: DeleteTimelineOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of timeline
      tags:
      - timeline
    get:
      description: Returns a list of Timeline
      operationId: RelatedTimelineIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Timeline'
                type: array
          description: list of all timeline
      summary: Related TimelineId of a Usergroup
      tags:
      - timeline
      - find
      - get
  /api/usergroup/{referenceId}/user_account:
    delete:
      description: Remove a related user_account_id from the usergroup_id
      operationId: DeleteUserAccountOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      tags:
      - user_account
    get:
      description: Returns a list of User account
      operationId: RelatedUserAccountIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Related UserAccountId of a Usergroup
      tags:
      - user_account
      - find
      - get
  /api/usergroup/{referenceId}/user_otp_account:
    delete:
      description: Remove a related user_otp_account_id from the usergroup_id
      operationId: DeleteUserOtpAccountOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_otp_account
      tags:
      - user_otp_account
    get:
      description: Returns a list of User otp account
      operationId: RelatedUserOtpAccountIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserOtpAccount'
                type: array
          description: list of all user_otp_account
      summary: Related UserOtpAccountId of a Usergroup
      tags:
      - user_otp_account
      - find
      - get
  /api/usergroup/{referenceId}/world:
    delete:
      description: Remove a related world_id from the usergroup_id
      operationId: DeleteWorldOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of world
      tags:
      - world
    get:
      description: Returns a list of World
      operationId: RelatedWorldIdOfUsergroup
      parameters:
      - description: Reference Id of the usergroup
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/World'
                type: array
          description: list of all world
      summary: Related WorldId of a Usergroup
      tags:
      - world
      - find
      - get
  /api/world:
    get:
      description: Returns a list of World
      operationId: GetWorld
      parameters:
      - description: Field name to sort by
        in: query
        name: sort
        required: false
        schema:
          type: string
      - description: Page number for the query set, starts with 1
        in: query
        name: page[number]
        required: false
        schema:
          type: string
      - description: Size of one page, try 10
        in: query
        name: page[size]
        required: false
        schema:
          type: string
      - description: search text in indexed columns
        in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/World'
                type: array
          description: list of all world
      summary: List all world
      tags:
      - world
      - find
      - get
    post:
      operationId: CreateWorld
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/NewWorld'
                  type: object
              type: object
        description: world to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/World'
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: world response
      summary: Create a new world
      tags:
      - world
      - create
  /api/world/{referenceId}:
    delete:
      description: Delete a world
      operationId: DeleteWorld
      parameters:
      - description: Reference Id of the world
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: delete world by reference id
      summary: Delete world
      tags:
      - world
      - delete
    get:
      description: Get world by id
      operationId: GetWorldByReferenceId
      parameters:
      - description: Reference Id of the world
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/World'
          description: get world by reference id
      summary: Get world by id
      tags:
      - world
    patch:
      description: Edit an existing world
      operationId: UpdateWorld
      parameters:
      - description: Reference Id of the world
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      $ref: '#/components/schemas/World'
                    id:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/World'
                      id:
                        type: string
                      relationships:
                        properties:
                          action_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          smd_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          timeline_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          user_account_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                          usergroup_id:
                            $ref: '#/components/schemas/IncludedRelationship'
                        type: object
                      type:
                        type: string
                    type: object
                  links:
                    $ref: '#/components/schemas/PaginationStatus'
                type: object
          description: updated world
      summary: Delete related action_id of world
      tags:
      - world_id
      - action
      - action_id
      - world
      - belongs_to
      - delete
  /api/world/{referenceId}/action:
    delete:
      description: Remove a related action_id from the world_id
      operationId: DeleteActionOfWorld
      parameters:
      - description: Reference Id of the world
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of action
      tags:
      - action
    get:
      description: Returns a list of Action
      operationId: RelatedActionIdOfWorld
      parameters:
      - description: Reference Id of the world
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Action'
                type: array
          description: list of all action
      summary: Related ActionId of a World
      tags:
      - action
      - find
      - get
  /api/world/{referenceId}/smd:
    delete:
      description: Remove a related world from the smd_id
      operationId: DeleteSmdIdOfWorld
      parameters:
      - description: Reference Id of the world
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of smd
      summary: Delete related smd_id of world
      tags:
      - smd_id
      - world
      - world_id
      - smd
      - has_many
      - delete
    get:
      description: Returns a list of all Smd related to a world
      operationId: GetSmdIdOfWorldId
      parameters:
      - description: Reference Id of the world
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Smd'
                type: array
          description: list of all smd
      summary: Fetch related smd_id of world
      tags:
      - smd
      - find
      - get
  /api/world/{referenceId}/timeline:
    delete:
      description: Remove a related timeline_id from the world_id
      operationId: DeleteTimelineOfWorld
      parameters:
      - description: Reference Id of the world
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of timeline
      tags:
      - timeline
    get:
      description: Returns a list of Timeline
      operationId: RelatedTimelineIdOfWorld
      parameters:
      - description: Reference Id of the world
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Timeline'
                type: array
          description: list of all timeline
      summary: Related TimelineId of a World
      tags:
      - timeline
      - find
      - get
  /api/world/{referenceId}/user_account:
    delete:
      description: Remove a related world from the user_account_id
      operationId: DeleteUserAccountIdOfWorld
      parameters:
      - description: Reference Id of the world
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of user_account
      summary: Delete related user_account_id of world
      tags:
      - user_account_id
      - world
      - world_id
      - user_account
      - belongs_to
      - delete
    get:
      description: Returns a list of all User account related to a world
      operationId: GetUserAccountIdOfWorldId
      parameters:
      - description: Reference Id of the world
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: list of all user_account
      summary: Fetch related user_account_id of world
      tags:
      - user_account
      - find
      - get
  /api/world/{referenceId}/usergroup:
    delete:
      description: Remove a related world from the usergroup_id
      operationId: DeleteUsergroupIdOfWorld
      parameters:
      - description: Reference Id of the world
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful deletion of usergroup
      summary: Delete related usergroup_id of world
      tags:
      - usergroup_id
      - world
      - world_id
      - usergroup
      - has_many
      - delete
    get:
      description: Returns a list of all Usergroup related to a world
      operationId: GetUsergroupIdOfWorldId
      parameters:
      - description: Reference Id of the world
        in: path
        name: referenceId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Usergroup'
                type: array
          description: list of all usergroup
      summary: Fetch related usergroup_id of world
      tags:
      - usergroup
      - find
      - get
security:
- bearerAuth: []
servers:
- description: Server rog
  url: http://rog
